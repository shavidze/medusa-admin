{
  "version": 3,
  "sources": ["../../emoji-picker-react/src/DomUtils/classNames.ts", "../../emoji-picker-react/src/DomUtils/focusElement.ts", "../../emoji-picker-react/src/components/context/ElementRefContext.tsx", "../../emoji-picker-react/src/types/exposedTypes.ts", "../../emoji-picker-react/src/config/categoryConfig.ts", "../../emoji-picker-react/src/config/cdnUrls.ts", "../../emoji-picker-react/src/data/skinToneVariations.ts", "../../emoji-picker-react/src/dataUtils/DataTypes.ts", "../../emoji-picker-react/src/dataUtils/alphaNumericEmojiIndex.ts", "../../emoji-picker-react/src/dataUtils/emojiSelectors.ts", "../../emoji-picker-react/src/config/config.ts", "../../emoji-picker-react/src/components/context/PickerConfigContext.tsx", "../../emoji-picker-react/src/config/mutableConfig.ts", "../../emoji-picker-react/src/config/useConfig.ts", "../../emoji-picker-react/src/hooks/useDebouncedState.ts", "../../emoji-picker-react/src/hooks/useHideEmojisByUniocode.ts", "../../emoji-picker-react/src/hooks/useDisallowedEmojis.ts", "../../emoji-picker-react/src/hooks/useInitialLoad.ts", "../../emoji-picker-react/src/components/context/PickerContext.tsx", "../../emoji-picker-react/src/hooks/useDisallowMouseMove.ts", "../../emoji-picker-react/src/DomUtils/elementPositionInRow.ts", "../../emoji-picker-react/src/DomUtils/selectors.ts", "../../emoji-picker-react/src/dataUtils/parseNativeEmoji.ts", "../../emoji-picker-react/src/dataUtils/suggested.ts", "../../emoji-picker-react/src/typeRefinements/typeRefinements.ts", "../../emoji-picker-react/src/hooks/useCloseAllOpenToggles.ts", "../../emoji-picker-react/src/hooks/useSetVariationPicker.ts", "../../emoji-picker-react/src/hooks/useMouseDownHandlers.ts", "../../emoji-picker-react/src/hooks/useOnScroll.ts", "../../emoji-picker-react/src/DomUtils/scrollTo.ts", "../../emoji-picker-react/src/hooks/useFocus.ts", "../../emoji-picker-react/src/hooks/useFilter.ts", "../../emoji-picker-react/src/hooks/useIsEmojiHidden.ts", "../../emoji-picker-react/node_modules/style-inject/dist/style-inject.es.js", "../../emoji-picker-react/src/components/atoms/Button.tsx", "../../emoji-picker-react/src/components/emoji/ClickableEmojiButton.tsx", "../../emoji-picker-react/src/components/emoji/EmojiImg.tsx", "../../emoji-picker-react/src/components/emoji/NativeEmoji.tsx", "../../emoji-picker-react/src/components/emoji/ViewOnlyEmoji.tsx", "../../emoji-picker-react/src/components/emoji/Emoji.tsx", "../../emoji-picker-react/src/components/body/EmojiCategory.tsx", "../../emoji-picker-react/src/components/body/Suggested.tsx", "../../emoji-picker-react/src/components/body/EmojiList.tsx", "../../emoji-picker-react/src/DomUtils/keyboardNavigation.ts", "../../emoji-picker-react/src/components/body/EmojiVariationPicker.tsx", "../../emoji-picker-react/src/components/body/Body.tsx", "../../emoji-picker-react/src/hooks/useEmojiPreviewEvents.ts", "../../emoji-picker-react/src/hooks/useShouldShowSkinTonePicker.ts", "../../emoji-picker-react/src/components/Layout/Flex.tsx", "../../emoji-picker-react/src/components/Layout/Space.tsx", "../../emoji-picker-react/src/components/Layout/Absolute.tsx", "../../emoji-picker-react/src/components/Layout/Relative.tsx", "../../emoji-picker-react/src/components/header/SkinTonePicker.tsx", "../../emoji-picker-react/src/components/footer/Preview.tsx", "../../emoji-picker-react/src/DomUtils/categoryNameFromDom.ts", "../../emoji-picker-react/src/hooks/useActiveCategoryScrollDetection.ts", "../../emoji-picker-react/src/hooks/useIsSearchMode.ts", "../../emoji-picker-react/src/hooks/useScrollCategoryIntoView.ts", "../../emoji-picker-react/src/hooks/useShouldHideCustomEmojis.ts", "../../emoji-picker-react/src/components/navigation/CategoryNavigation.tsx", "../../emoji-picker-react/src/components/header/CssSearch.tsx", "../../emoji-picker-react/src/components/header/Search.tsx", "../../emoji-picker-react/src/components/header/Header.tsx", "../../emoji-picker-react/src/DomUtils/getActiveElement.ts", "../../emoji-picker-react/src/hooks/useKeyboardNavigation.ts", "../../emoji-picker-react/src/hooks/preloadEmoji.ts", "../../emoji-picker-react/src/hooks/useOnFocus.ts", "../../emoji-picker-react/src/components/main/PickerMain.tsx", "../../emoji-picker-react/src/EmojiPickerReact.tsx", "../../emoji-picker-react/src/components/ErrorBoundary.tsx", "../../emoji-picker-react/src/components/emoji/ExportedEmoji.tsx", "../../emoji-picker-react/src/index.tsx"],
  "sourcesContent": ["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariations = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n  open = 'epr-open',\n  vertical = 'epr-vertical',\n  horizontal = 'epr-horizontal',\n  variationPicker = 'epr-emoji-variation-picker',\n  darkTheme = 'epr-dark-theme',\n  autoTheme = 'epr-auto-theme'\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map(c => `.${c}`).join('');\n}\n\nexport function clsx(...args: any[]): string {\n  const classes = args.reduce((classes, arg) => {\n    if (typeof arg === 'string') {\n      classes.push(arg);\n    }\n\n    if (Array.isArray(arg)) {\n      classes.push(clsx(...arg));\n    }\n\n    if (typeof arg === 'object') {\n      Object.entries(arg).forEach(([key, value]) => {\n        if (value) {\n          classes.push(key);\n        }\n      });\n    }\n\n    return classes;\n  }, []);\n\n  return classes.filter(Boolean).join(' ');\n}\n", "import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n", "import * as React from 'react';\n\nimport { focusElement } from '../../DomUtils/focusElement';\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    if (target === null && AnchoredEmojiRef.current !== null) {\n      focusElement(AnchoredEmojiRef.current);\n    }\n\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n", "export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  imageUrl: string;\n  getImageUrl: (emojiStyle?: EmojiStyle) => string;\n  isCustom: boolean;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent'\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook'\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto'\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff'\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  CUSTOM = 'custom',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags'\n}\n\nexport enum SkinTonePickerLocation {\n  SEARCH = 'SEARCH',\n  PREVIEW = 'PREVIEW'\n}\n", "import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.CUSTOM,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nexport type CustomCategoryConfig = {\n  category: Categories.CUSTOM;\n  name: string;\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.CUSTOM]: {\n    category: Categories.CUSTOM,\n    name: 'Custom Emojis'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n", "import { EmojiStyle } from '../types/exposedTypes';\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n", "import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n", "import emojis from '../data/emojis';\n\nexport enum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n  imgUrl = 'imgUrl'\n}\n\nexport interface DataEmoji extends WithName {\n  [EmojiProperties.unified]: string;\n  [EmojiProperties.variations]?: string[];\n  [EmojiProperties.added_in]: string;\n  [EmojiProperties.imgUrl]?: string;\n}\n\nexport type DataEmojis = DataEmoji[];\n\nexport type DataGroups = keyof typeof emojis;\n\nexport type WithName = {\n  [EmojiProperties.name]: string[];\n};\n", "import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    indexEmoji(emoji);\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n\nexport function indexEmoji(emoji: DataEmoji): void {\n  const joinedNameString = emojiNames(emoji)\n    .flat()\n    .join('')\n    .toLowerCase()\n    .replace(/[^a-zA-Z\\d]/g, '')\n    .split('');\n\n  joinedNameString.forEach(char => {\n    alphaNumericEmojiIndex[char] = alphaNumericEmojiIndex[char] ?? {};\n\n    alphaNumericEmojiIndex[char][emojiUnified(emoji)] = emoji;\n  });\n}\n", "import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis, EmojiProperties, WithName } from './DataTypes';\nimport { indexEmoji } from './alphaNumericEmojiIndex';\n\nexport function emojiNames(emoji: WithName): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji?: WithName): string {\n  if (!emoji) {\n    return '';\n  }\n\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\n// WARNING: DO NOT USE DIRECTLY\nexport function emojiUrlByUnified(\n  unified: string,\n  emojiStyle: EmojiStyle\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find(variation => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nexport function setCustomEmojis(customEmojis: CustomEmoji[]): void {\n  emojis[Categories.CUSTOM].length = 0;\n\n  customEmojis.forEach(emoji => {\n    const emojiData = customToRegularEmoji(emoji);\n\n    emojis[Categories.CUSTOM].push(emojiData as never);\n\n    if (allEmojisByUnified[emojiData[EmojiProperties.unified]]) {\n      return;\n    }\n\n    allEmojis.push(emojiData);\n    allEmojisByUnified[emojiData[EmojiProperties.unified]] = emojiData;\n    indexEmoji(emojiData);\n  });\n}\n\nfunction customToRegularEmoji(emoji: CustomEmoji): DataEmoji {\n  return {\n    [EmojiProperties.name]: emoji.names.map(name => name.toLowerCase()),\n    [EmojiProperties.unified]: emoji.id.toLowerCase(),\n    [EmojiProperties.added_in]: '0',\n    [EmojiProperties.imgUrl]: emoji.imgUrl\n  };\n}\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n\n    if (emojiHasVariations(Emoji)) {\n      emojiVariations(Emoji).forEach(variation => {\n        allEmojis[variation] = Emoji;\n      });\n    }\n\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n", "import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  setCustomEmojis,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig\n} from './categoryConfig';\nimport { CustomEmoji } from './customEmojiConfig';\n\nconst KNOWN_FAILING_EMOJIS = ['2640-fe0f', '2642-fe0f', '2695-fe0f'];\n\nexport const DEFAULT_SEARCH_PLACEHOLDER = 'Search';\nexport const SEARCH_RESULTS_NO_RESULTS_FOUND = 'No results found';\nexport const SEARCH_RESULTS_SUFFIX =\n  ' found. Use up and down arrow keys to navigate.';\nexport const SEARCH_RESULTS_ONE_RESULT_FOUND =\n  '1 result' + SEARCH_RESULTS_SUFFIX;\nexport const SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND =\n  '%n results' + SEARCH_RESULTS_SUFFIX;\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode\n  });\n\n  setCustomEmojis(config.customEmojis ?? []);\n\n  const skinTonePickerLocation = config.searchDisabled\n    ? SkinTonePickerLocation.PREVIEW\n    : config.skinTonePickerLocation;\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n    skinTonePickerLocation\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    customEmojis: [],\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    getEmojiUrl: emojiUrlByUnified,\n    height: 450,\n    lazyLoadEmojis: false,\n    previewConfig: {\n      ...basePreviewConfig\n    },\n    searchDisabled: false,\n    searchPlaceHolder: DEFAULT_SEARCH_PLACEHOLDER,\n    searchPlaceholder: DEFAULT_SEARCH_PLACEHOLDER,\n    skinTonePickerLocation: SkinTonePickerLocation.SEARCH,\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    unicodeToHide: new Set<string>(KNOWN_FAILING_EMOJIS),\n    width: 350\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  searchPlaceholder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: PickerDimensions;\n  width: PickerDimensions;\n  getEmojiUrl: GetEmojiUrl;\n  searchDisabled: boolean;\n  skinTonePickerLocation: SkinTonePickerLocation;\n  unicodeToHide: Set<string>;\n  customEmojis: CustomEmoji[];\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n} & Omit<PickerConfigInternal, 'previewConfig' | 'unicodeToHide'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n\nexport type PickerDimensions = string | number;\n", "import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  const mergedConfig = useSetConfig(config);\n\n  return (\n    <ConfigContext.Provider value={mergedConfig}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function useSetConfig(config: PickerConfig) {\n  const [mergedConfig, setMergedConfig] = React.useState(() =>\n    mergeConfig(config)\n  );\n\n  React.useEffect(() => {\n    if (config.customEmojis?.length !== mergedConfig.customEmojis?.length) {\n      setMergedConfig(mergeConfig(config));\n    }\n    // not gonna...\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [config.customEmojis?.length]);\n\n  return mergedConfig;\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n", "import React from 'react';\n\nimport { EmojiClickData } from '../types/exposedTypes';\n\nexport type MutableConfig = {\n  onEmojiClick?: (emoji: EmojiClickData, event: MouseEvent) => void;\n};\n\nexport const MutableConfigContext = React.createContext<\n  React.MutableRefObject<MutableConfig>\n>({} as React.MutableRefObject<MutableConfig>);\n\nexport function useMutableConfig(): React.MutableRefObject<MutableConfig> {\n  const mutableConfig = React.useContext(MutableConfigContext);\n  return mutableConfig;\n}\n\nexport function useDefineMutableConfig(\n  config: MutableConfig\n): React.MutableRefObject<MutableConfig> {\n  const MutableConfigRef = React.useRef<MutableConfig>({\n    onEmojiClick: config.onEmojiClick || emptyFunc\n  });\n\n  React.useEffect(() => {\n    MutableConfigRef.current.onEmojiClick = config.onEmojiClick || emptyFunc;\n  }, [config.onEmojiClick]);\n\n  return MutableConfigRef;\n}\n\nfunction emptyFunc() {}\n", "import { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTonePickerLocation,\n  SkinTones,\n  SuggestionMode,\n  Theme\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport {\n  DEFAULT_SEARCH_PLACEHOLDER,\n  SEARCH_RESULTS_NO_RESULTS_FOUND,\n  SEARCH_RESULTS_ONE_RESULT_FOUND,\n  SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND,\n  PickerDimensions,\n  PreviewConfig\n} from './config';\nimport { CustomEmoji } from './customEmojiConfig';\nimport { useMutableConfig } from './mutableConfig';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder, searchPlaceholder } = usePickerConfig();\n  return (\n    [searchPlaceHolder, searchPlaceholder].find(\n      p => p !== DEFAULT_SEARCH_PLACEHOLDER\n    ) ?? DEFAULT_SEARCH_PLACEHOLDER\n  );\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useCustomEmojisConfig(): CustomEmoji[] {\n  const { customEmojis } = usePickerConfig();\n  return customEmojis;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { current } = useMutableConfig();\n  return current.onEmojiClick || (() => {});\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): {\n  height: PickerDimensions;\n  width: PickerDimensions;\n} {\n  const { height, width } = usePickerConfig();\n  return { height: getDimension(height), width: getDimension(width) };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n\nexport function useSearchDisabledConfig(): boolean {\n  const { searchDisabled } = usePickerConfig();\n  return searchDisabled;\n}\n\nexport function useSkinTonePickerLocationConfig(): SkinTonePickerLocation {\n  const { skinTonePickerLocation } = usePickerConfig();\n  return skinTonePickerLocation;\n}\n\nexport function useUnicodeToHide() {\n  const { unicodeToHide } = usePickerConfig();\n  return unicodeToHide;\n}\n\nexport function useGetEmojiUrlConfig(): (\n  unified: string,\n  style: EmojiStyle\n) => string {\n  const { getEmojiUrl } = usePickerConfig();\n  return getEmojiUrl;\n}\n\nfunction getDimension(dimensionConfig: PickerDimensions): PickerDimensions {\n  return typeof dimensionConfig === 'number'\n    ? `${dimensionConfig}px`\n    : dimensionConfig;\n}\n\nexport function useSearchResultsConfig(searchResultsCount: number): string {\n  const hasResults = searchResultsCount > 0;\n  const isPlural = searchResultsCount > 1;\n\n  if (hasResults) {\n    return isPlural ?\n      SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND.replace('%n', searchResultsCount.toString())\n        : SEARCH_RESULTS_ONE_RESULT_FOUND;\n  }\n\n  return SEARCH_RESULTS_NO_RESULTS_FOUND;\n}\n", "import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n", "import { useUnicodeToHide } from \"../config/useConfig\";\n\nexport function useIsUnicodeHidden() {\n    const unicodeToHide = useUnicodeToHide();\n    return (emojiUnified: string) => unicodeToHide.has(emojiUnified);\n  }\n", "import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  addedIn,\n  allEmojis,\n  emojiUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { useIsUnicodeHidden } from './useHideEmojisByUniocode';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nexport function useIsEmojiDisallowed() {\n  const disallowedEmojis = useDisallowedEmojis();\n  const isUnicodeHidden = useIsUnicodeHidden();\n\n  return function isEmojiDisallowed(emoji: DataEmoji) {\n    const unified = unifiedWithoutSkinTone(emojiUnified(emoji));\n\n    return Boolean(disallowedEmojis[unified] || isUnicodeHidden(unified));\n  };\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n", "import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        disallowedEmojisRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}]\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    }\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n", "import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n", "import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n", "import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(unified ?? originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  if (!root) return null;\n\n  return root.matches(asSelectors(ClassNames.scrollBody))\n    ? root\n    : root.querySelector(asSelectors(ClassNames.scrollBody));\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n", "export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n", "import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getSuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setSuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getSuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n", "import {\n  Categories,\n  CategoryConfig,\n  CustomCategoryConfig\n} from '../config/categoryConfig';\nimport { CustomEmoji } from '../config/customEmojiConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\n\nexport function isCustomCategory(\n  category: CategoryConfig | CustomCategoryConfig\n): category is CustomCategoryConfig {\n  return category.category === Categories.CUSTOM;\n}\n\nexport function isCustomEmoji(emoji: Partial<DataEmoji>): emoji is CustomEmoji {\n  return emoji.imgUrl !== undefined;\n}\n", "import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n", "import { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport { useSetAnchoredEmojiRef } from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (emoji) {\n      setAnchoredEmojiRef(element);\n      setEmojiVariationPicker(emoji);\n    }\n  };\n}\n", "import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useOnEmojiClickConfig\n} from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setSuggested } from '../dataUtils/suggested';\nimport { isCustomEmoji } from '../typeRefinements/typeRefinements';\nimport { EmojiClickData, SkinTones, EmojiStyle } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const activeEmojiStyle = useEmojiStyleConfig();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setSuggested(emoji, skinToneToUse);\n      onEmojiClick(\n        emojiClickOutput(emoji, skinToneToUse, activeEmojiStyle, getEmojiUrl),\n        event\n      );\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested,\n      getEmojiUrl,\n      activeEmojiStyle\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones,\n  activeEmojiStyle: EmojiStyle,\n  getEmojiUrl: GetEmojiUrl\n): EmojiClickData {\n  const names = emojiNames(emoji);\n\n  if (isCustomEmoji(emoji)) {\n    const unified = emojiUnified(emoji);\n    return {\n      activeSkinTone,\n      emoji: unified,\n      getImageUrl() {\n        return emoji.imgUrl;\n      },\n      imageUrl: emoji.imgUrl,\n      isCustom: true,\n      names,\n      unified,\n      unifiedWithoutSkinTone: unified\n    };\n  }\n  const unified = emojiUnified(emoji, activeSkinTone);\n\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle = activeEmojiStyle ?? EmojiStyle.APPLE) {\n      return getEmojiUrl(unified, emojiStyle);\n    },\n    imageUrl: getEmojiUrl(unified, activeEmojiStyle ?? EmojiStyle.APPLE),\n    isCustom: false,\n    names,\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n", "import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n", "import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!emoji || !isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  if (emoji.closest(asSelectors(ClassNames.variationPicker))) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n", "import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\nimport { useSearchResultsConfig } from '../config/useConfig';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n  const statusSearchResults = getStatusSearchResults(filterRef.current, searchTerm);\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n    statusSearchResults,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n\nfunction getStatusSearchResults(filterState: FilterState, searchTerm: string): string {\n  if (!filterState?.[searchTerm]) return '';\n\n  const searchResultsCount = Object.entries(filterState?.[searchTerm])?.length || 0;\n  return useSearchResultsConfig(searchResultsCount);\n}\n", "import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n", "function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n", "import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { Button } from '../atoms/Button';\nimport './Emoji.css';\n\ntype ClickableEmojiButtonProps = Readonly<{\n  hidden?: boolean;\n  showVariations?: boolean;\n  hiddenOnSearch?: boolean;\n  emojiNames: string[];\n  children: React.ReactNode;\n  hasVariations: boolean;\n  unified?: string;\n}>;\n\nexport function ClickableEmojiButton({\n  emojiNames,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  showVariations = true,\n  hasVariations,\n  children\n}: ClickableEmojiButtonProps) {\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariations]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      aria-label={emojiNames[0]}\n      data-full-name={emojiNames}\n    >\n      {children}\n    </Button>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nexport function EmojiImg({\n  emojiName,\n  style,\n  lazyLoad = false,\n  imgUrl,\n  onError\n}: {\n  emojiName: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n  imgUrl: string;\n  onError: () => void;\n}) {\n  return (\n    <img\n      src={imgUrl}\n      alt={emojiName}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\n\nexport function NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n", "import * as React from 'react';\n\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { isCustomEmoji } from '../../typeRefinements/typeRefinements';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\n\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { EmojiImg } from './EmojiImg';\nimport { NativeEmoji } from './NativeEmoji';\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad,\n  getEmojiUrl = emojiUrlByUnified\n}: BaseEmojiProps) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  if (!emojiToRender) {\n    return null;\n  }\n\n  if (isCustomEmoji(emojiToRender)) {\n    return (\n      <EmojiImg\n        style={style}\n        emojiName={unified}\n        emojiStyle={EmojiStyle.NATIVE}\n        lazyLoad={lazyLoad}\n        imgUrl={emojiToRender.imgUrl}\n        onError={onError}\n      />\n    );\n  }\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          style={style}\n          emojiName={emojiName(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n          imgUrl={getEmojiUrl(unified, emojiStyle)}\n          onError={onError}\n        />\n      )}\n    </>\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n", "import * as React from 'react';\n\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { emojiHasVariations, emojiNames } from '../../dataUtils/emojiSelectors';\n\nimport './Emoji.css';\nimport { BaseEmojiProps } from './BaseEmojiProps';\nimport { ClickableEmojiButton } from './ClickableEmojiButton';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\ntype ClickableEmojiProps = Readonly<\n  BaseEmojiProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad,\n  getEmojiUrl\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <ClickableEmojiButton\n      hasVariations={hasVariations}\n      showVariations={showVariations}\n      hidden={hidden}\n      hiddenOnSearch={hiddenOnSearch}\n      emojiNames={emojiNames(emoji)}\n      unified={unified}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n        getEmojiUrl={getEmojiUrl}\n      />\n    </ClickableEmojiButton>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <h2 className={ClassNames.label}>{categoryName}</h2>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n", "import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useSuggestedEmojisModeConfig,\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getSuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const suggested = React.useMemo(\n    () => getSuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map((suggestedItem) => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n            getEmojiUrl={getEmojiUrl}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  useLazyLoadEmojisConfig,\n  useSkinTonesDisabledConfig\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiDisallowed } from '../../hooks/useDisallowedEmojis';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useIsPastInitialLoad\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n  const renderdCategoriesCountRef = React.useRef(0);\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            category={category}\n            categoryConfig={categoryConfig}\n            renderdCategoriesCountRef={renderdCategoriesCountRef}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  category,\n  categoryConfig,\n  renderdCategoriesCountRef\n}: {\n  category: Categories;\n  categoryConfig: CategoryConfig;\n  renderdCategoriesCountRef: React.MutableRefObject<number>;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const isEmojiDisallowed = useIsEmojiDisallowed();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n  const showVariations = !useSkinTonesDisabledConfig();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && renderdCategoriesCountRef.current > 0\n      ? []\n      : emojisByCategory(category);\n\n  if (emojisToPush.length > 0) {\n    renderdCategoriesCountRef.current++;\n  }\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map(emoji => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = isEmojiDisallowed(emoji);\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        showVariations={showVariations}\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n        getEmojiUrl={getEmojiUrl}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n", "import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { focusFirstVisibleEmoji } from '../../DomUtils/keyboardNavigation';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig\n} from '../../config/useConfig';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariations);\n\n  useEffect(() => {\n    if (!visible) {\n      return;\n    }\n\n    focusFirstVisibleEmoji(VariationPickerRef.current);\n  }, [VariationPickerRef, visible, AnchoredEmojiRef]);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx(ClassNames.variationPicker, {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible && emoji\n        ? [emojiUnified(emoji)]\n            .concat(emojiVariations(emoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={emoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n                getEmojiUrl={getEmojiUrl}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n", "import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n", "import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n", "import { useSkinTonePickerLocationConfig } from '../config/useConfig';\nimport { SkinTonePickerLocation } from '../types/exposedTypes';\n\nexport function useShouldShowSkinTonePicker() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return function shouldShowSkinTonePicker(location: SkinTonePickerLocation) {\n    return skinTonePickerLocationConfig === location;\n  };\n}\n\nexport function useIsSkinToneInSearch() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.SEARCH;\n}\n\nexport function useIsSkinToneInPreview() {\n  const skinTonePickerLocationConfig = useSkinTonePickerLocationConfig();\n\n  return skinTonePickerLocationConfig === SkinTonePickerLocation.PREVIEW;\n}\n", "import * as React from 'react';\n\nimport './Flex.css';\nimport { clsx } from '../../DomUtils/classNames';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\n\ntype Props = Readonly<{\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Space({ className, style = {} }: Props) {\n  return <div style={{ flex: 1, ...style }} className={clsx(className)} />;\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Absolute({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'absolute' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}>;\n\nexport default function Relative({ children, className, style }: Props) {\n  return (\n    <div style={{ ...style, position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Absolute from '../Layout/Absolute';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nconst ITEM_SIZE = 28;\n\ntype Props = {\n  direction?: SkinTonePickerDirection;\n};\n\nexport function SkinTonePickerMenu() {\n  return (\n    <Relative style={{ height: ITEM_SIZE }}>\n      <Absolute style={{ bottom: 0, right: 0 }}>\n        <SkinTonePicker direction={SkinTonePickerDirection.VERTICAL} />\n      </Absolute>\n    </Relative>\n  );\n}\n\nexport function SkinTonePicker({\n  direction = SkinTonePickerDirection.HORIZONTAL\n}: Props) {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const fullWidth = `${ITEM_SIZE * skinToneVariations.length}px`;\n\n  const expandedSize = isOpen ? fullWidth : ITEM_SIZE + 'px';\n\n  const vertical = direction === SkinTonePickerDirection.VERTICAL;\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', direction, {\n        [ClassNames.open]: isOpen\n      })}\n      style={\n        vertical\n          ? { flexBasis: expandedSize, height: expandedSize }\n          : { flexBasis: expandedSize }\n      }\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  vertical\n                    ? `translateY(-${i * (isOpen ? ITEM_SIZE : 0)}px)`\n                    : `translateX(-${i * (isOpen ? ITEM_SIZE : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n\nexport enum SkinTonePickerDirection {\n  VERTICAL = ClassNames.vertical,\n  HORIZONTAL = ClassNames.horizontal\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport {\n  useEmojiStyleConfig,\n  useGetEmojiUrlConfig,\n  usePreviewConfig\n} from '../../config/useConfig';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport { useIsSkinToneInPreview } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Space from '../Layout/Space';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport './Preview.css';\nimport { ViewOnlyEmoji } from '../emoji/ViewOnlyEmoji';\nimport { SkinTonePickerMenu } from '../header/SkinTonePicker';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewBody />\n      <Space />\n      {isSkinToneInPreview ? <SkinTonePickerMenu /> : null}\n    </Flex>\n  );\n}\n\nexport function PreviewBody() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  const emoji = emojiByUnified(\n    previewEmoji?.unified ?? previewEmoji?.originalUnified\n  );\n\n  const show = emoji != null && previewEmoji != null;\n\n  return <PreviewContent />;\n\n  function PreviewContent() {\n    const defaultEmoji =\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji);\n    if (!defaultEmoji) {\n      return null;\n    }\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={emoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n              getEmojiUrl={getEmojiUrl}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">{emojiName(emoji)}</div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n", "export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n", "import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n", "import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n", "import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n", "import { useCustomEmojisConfig } from '../config/useConfig';\n\nexport function useShouldHideCustomEmojis() {\n  const customCategoryConfig = useCustomEmojisConfig();\n\n  if (!customCategoryConfig) {\n    return false;\n  }\n\n  return customCategoryConfig.length === 0;\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { useShouldHideCustomEmojis } from '../../hooks/useShouldHideCustomEmojis';\nimport { isCustomCategory } from '../../typeRefinements/typeRefinements';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const hideCustomCategory = useShouldHideCustomEmojis();\n\n  return (\n      <div\n        className='epr-category-nav'\n        role='tablist'\n        aria-label='Category navigation'\n        id='epr-category-nav-id'\n        ref={CategoryNavigationRef}\n      >\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        const isActiveCategory = category === activeCategory;\n\n        if (isCustomCategory(categoryConfig) && hideCustomCategory) {\n          return null;\n        }\n\n        return (\n          <Button\n            tabIndex={(isSearchMode || isActiveCategory) ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: isActiveCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n            aria-selected={isActiveCategory}\n            role='tab'\n            aria-controls='epr-category-nav-id'\n          />\n        );\n      })}\n    </div>\n  );\n}\n", "import * as React from 'react';\n\nimport { ClassNames, asSelectors } from '../../DomUtils/classNames';\nimport { getNormalizedSearchTerm } from '../../hooks/useFilter';\n\nconst SCOPE = `${asSelectors(ClassNames.emojiPicker)} ${asSelectors(\n  ClassNames.emojiList\n)}`;\n\nconst EMOJI_BUTTON = ['button', asSelectors(ClassNames.emoji)].join('');\nconst CATEGORY = asSelectors(ClassNames.category);\n\nexport function CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const q = genQuery(value);\n\n  return (\n    <style>{`\n    ${SCOPE} ${EMOJI_BUTTON} {\n      display: none;\n    }\n\n\n    ${SCOPE} ${q} {\n      display: flex;\n    }\n\n    ${SCOPE} ${CATEGORY}:not(:has(${q})) {\n      display: none;\n    }\n  `}</style>\n  );\n}\n\nfunction genQuery(value: string): string {\n  return [\n    EMOJI_BUTTON,\n    '[data-full-name*=\"',\n    getNormalizedSearchTerm(value),\n    '\"]'\n  ].join('');\n}\n", "import * as React from 'react';\nimport { useState } from 'react';\n\nimport { clsx } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchDisabledConfig,\n  useSearchPlaceHolderConfig\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useClearSearch, useFilter } from '../../hooks/useFilter';\nimport { useIsSkinToneInSearch } from '../../hooks/useShouldShowSkinTonePicker';\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\nimport { CssSearch } from './CssSearch';\nimport { SkinTonePicker } from './SkinTonePicker';\n\nexport function SearchContainer() {\n  const searchDisabled = useSearchDisabledConfig();\n\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  if (searchDisabled) {\n    return null;\n  }\n\n  return (\n    <Flex className=\"epr-header-overlay\">\n      <Search />\n\n      {isSkinToneInSearch ? <SkinTonePicker /> : null}\n    </Flex>\n  );\n}\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { statusSearchResults, searchTerm, onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        aria-controls=\"epr-search-id\"\n        placeholder={placeholder}\n        onChange={event => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      {searchTerm ? (\n        <div\n          role=\"status\"\n          className={clsx(\n            'epr-status-search-results',\n            'epr-status-visually-hidden'\n          )}\n          aria-live=\"polite\"\n          id=\"epr-search-id\"\n          aria-atomic=\"true\"\n        >\n          {statusSearchResults}\n        </div>\n      ) : null}\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n", "import * as React from 'react';\n\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport './Header.css';\nimport { SearchContainer } from './Search';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <SearchContainer />\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n", "import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n", "import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\nimport {\n  useIsSkinToneInPreview,\n  useIsSkinToneInSearch\n} from './useShouldShowSkinTonePicker';\nimport { useSearchDisabledConfig } from '../config/useConfig';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            if (!isSkinToneInSearch) {\n              return;\n            }\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const isSkinToneInPreview = useIsSkinToneInPreview();\n  const isSkinToneInSearch = useIsSkinToneInSearch();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        if (isSkinToneInSearch) {\n          switch (key) {\n            case KeyboardEvents.ArrowLeft:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowRight:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (isOpen) {\n                setIsOpen(false);\n              }\n              goDownFromSearchInput();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n\n        if (isSkinToneInPreview) {\n          switch (key) {\n            case KeyboardEvents.ArrowUp:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusNextSkinTone(focusSearchInput);\n              break;\n            case KeyboardEvents.ArrowDown:\n              event.preventDefault();\n              if (!isOpen) {\n                return focusSearchInput();\n              }\n              focusPrevSkinTone();\n              break;\n            default:\n              onType(event);\n              break;\n          }\n        }\n      },\n    [\n      isOpen,\n      focusSearchInput,\n      setIsOpen,\n      goDownFromSearchInput,\n      onType,\n      isSkinToneInPreview,\n      isSkinToneInSearch\n    ]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const searchDisabled = useSearchDisabledConfig();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event) || searchDisabled) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n", "import { GetEmojiUrl } from '../components/emoji/BaseEmojiProps';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified, emojiVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  getEmojiUrl: GetEmojiUrl,\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach((variation) => {\n    const emojiUrl = getEmojiUrl(variation, emojiStyle);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n", "import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig, useGetEmojiUrlConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n  const getEmojiUrl = useGetEmojiUrlConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(getEmojiUrl, emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle, getEmojiUrl]);\n}\n", "import * as React from 'react';\n\nimport { ClassNames, clsx } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height,\n    width\n  };\n\n  \n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        [ClassNames.darkTheme]: theme === Theme.DARK,\n        [ClassNames.autoTheme]: theme === Theme.AUTO\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n", "import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\n\nimport './EmojiPickerReact.css';\nimport { PickerProps } from './index';\n\nfunction EmojiPicker(props: PickerProps) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n\n// eslint-disable-next-line complexity\nexport default React.memo(EmojiPicker, (prev, next) => {\n  const prevCustomEmojis = prev.customEmojis ?? [];\n  const nextCustomEmojis = next.customEmojis ?? [];\n  return (\n    prev.emojiVersion === next.emojiVersion &&\n    prev.searchPlaceHolder === next.searchPlaceHolder &&\n    prev.searchPlaceholder === next.searchPlaceholder &&\n    prev.defaultSkinTone === next.defaultSkinTone &&\n    prev.skinTonesDisabled === next.skinTonesDisabled &&\n    prev.autoFocusSearch === next.autoFocusSearch &&\n    prev.emojiStyle === next.emojiStyle &&\n    prev.theme === next.theme &&\n    prev.suggestedEmojisMode === next.suggestedEmojisMode &&\n    prev.lazyLoadEmojis === next.lazyLoadEmojis &&\n    prev.height === next.height &&\n    prev.width === next.width &&\n    prev.searchDisabled === next.searchDisabled &&\n    prev.skinTonePickerLocation === next.skinTonePickerLocation &&\n    prevCustomEmojis.length === nextCustomEmojis.length\n  );\n});\n", "import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n", "import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { GetEmojiUrl } from './BaseEmojiProps';\nimport { ViewOnlyEmoji } from './ViewOnlyEmoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false,\n  getEmojiUrl,\n  emojiUrl\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n  getEmojiUrl?: GetEmojiUrl;\n  emojiUrl?: string;\n}) {\n  if (!unified && !emojiUrl && !getEmojiUrl) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n      getEmojiUrl={emojiUrl ? () => emojiUrl : getEmojiUrl}\n    />\n  );\n}\n", "import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\nimport {\n  MutableConfigContext,\n  useDefineMutableConfig\n} from './config/mutableConfig';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode,\n  SkinTonePickerLocation\n} from './types/exposedTypes';\n\nexport interface PickerProps extends PickerConfig {}\n\nexport default function EmojiPicker(props: PickerProps) {\n  const MutableConfigRef = useDefineMutableConfig({\n    onEmojiClick: props.onEmojiClick\n  });\n\n  return (\n    <ErrorBoundary>\n      <MutableConfigContext.Provider value={MutableConfigRef}>\n        <EmojiPickerReact {...props} />\n      </MutableConfigContext.Provider>\n    </ErrorBoundary>\n  );\n}\n"],
  "mappings": ";;;;;;;;;AAAA,IAAYA;CAAZ,SAAYA,aAAAA;AACVA,EAAAA,YAAAA,gBAAAA,IAAA;AACAA,EAAAA,YAAAA,cAAAA,IAAA;AACAA,EAAAA,YAAAA,QAAAA,IAAA;AACAA,EAAAA,YAAAA,SAAAA,IAAA;AACAA,EAAAA,YAAAA,QAAAA,IAAA;AACAA,EAAAA,YAAAA,OAAAA,IAAA;AACAA,EAAAA,YAAAA,UAAAA,IAAA;AACAA,EAAAA,YAAAA,OAAAA,IAAA;AACAA,EAAAA,YAAAA,iBAAAA,IAAA;AACAA,EAAAA,YAAAA,oBAAAA,IAAA;AACAA,EAAAA,YAAAA,YAAAA,IAAA;AACAA,EAAAA,YAAAA,WAAAA,IAAA;AACAA,EAAAA,YAAAA,UAAAA,IAAA;AACAA,EAAAA,YAAAA,aAAAA,IAAA;AACAA,EAAAA,YAAAA,MAAAA,IAAA;AACAA,EAAAA,YAAAA,UAAAA,IAAA;AACAA,EAAAA,YAAAA,YAAAA,IAAA;AACAA,EAAAA,YAAAA,iBAAAA,IAAA;AACAA,EAAAA,YAAAA,WAAAA,IAAA;AACAA,EAAAA,YAAAA,WAAAA,IAAA;AACD,GArBWA,eAAAA,aAAU,CAAA,EAAtB;SAuBgBC,cAAAA;oCAAeC,aAAAA,IAAAA,MAAAA,IAAAA,GAAAA,OAAAA,GAAAA,OAAAA,MAAAA,QAAAA;AAAAA,eAAAA,IAAAA,IAAAA,UAAAA,IAAAA;;AAC7B,SAAOA,WAAWC,IAAI,SAAAC,GAAC;AAAA,WAAA,MAAQA;GAAxB,EAA6BC,KAAK,EAAlC;AACR;SAEeC,OAAAA;qCAAQC,OAAAA,IAAAA,MAAAA,KAAAA,GAAAA,QAAAA,GAAAA,QAAAA,OAAAA,SAAAA;AAAAA,SAAAA,KAAAA,IAAAA,UAAAA,KAAAA;;AACtB,MAAMC,UAAUD,KAAKE,OAAO,SAACD,UAASE,KAAV;AAC1B,QAAI,OAAOA,QAAQ,UAAU;AAC3BF,MAAAA,SAAQG,KAAKD,GAAb;;AAGF,QAAIE,MAAMC,QAAQH,GAAd,GAAoB;AACtBF,MAAAA,SAAQG,KAAKL,KAAI,MAAJ,QAAQI,GAAR,CAAb;;AAGF,QAAI,OAAOA,QAAQ,UAAU;AAC3BI,aAAOC,QAAQL,GAAf,EAAoBM,QAAQ,SAAA,MAAA;YAAEC,MAAAA,KAAAA,CAAAA,GAAKC,QAAAA,KAAAA,CAAAA;AACjC,YAAIA,OAAO;AACTV,UAAAA,SAAQG,KAAKM,GAAb;;OAFJ;;AAOF,WAAOT;KACN,CAAA,CAlBa;AAoBhB,SAAOA,QAAQW,OAAOC,OAAf,EAAwBf,KAAK,GAA7B;AACR;SC/CegB,aAAaC,SAAAA;AAC3B,MAAI,CAACA,SAAS;AACZ;;AAGFC,wBAAsB,WAAA;AACpBD,YAAQE,MAAR;GADmB;AAGtB;AAED,SAAgBC,wBAAwBH,SAAAA;AACtC,MAAI,CAACA;AAAS;AAEd,MAAMI,OAAOJ,QAAQK;AAErBN,eAAaK,IAAD;AACb;AAED,SAAgBE,wBAAwBN,SAAAA;AACtC,MAAI,CAACA;AAAS;AAEd,MAAMO,OAAOP,QAAQQ;AAErBT,eAAaQ,IAAD;AACb;AAED,SAAgBE,uBAAuBT,SAAAA;AACrC,MAAI,CAACA;AAAS;AAEd,MAAMU,QAAQV,QAAQW;AAEtBZ,eAAaW,KAAD;AACb;SC7BeE,0BAAAA,MAAAA;MACdC,WAAAA,KAAAA;AAIA,MAAMC,oBAAgBC,qBAA0B,IAA1B;AACtB,MAAMC,uBAAmBD,qBAA0B,IAA1B;AACzB,MAAME,cAAUF,qBAA6B,IAA7B;AAChB,MAAMG,qBAAiBH,qBAA+B,IAA/B;AACvB,MAAMI,wBAAoBJ,qBAA6B,IAA7B;AAC1B,MAAMK,4BAAwBL,qBAA6B,IAA7B;AAC9B,MAAMM,yBAAqBN,qBAA6B,IAA7B;AAE3B,aACEA,4BAACO,kBAAkBC,UAAnB;IACE3B,OAAO;MACLoB;MACAC;MACAG;MACAN;MACAI;MACAC;MACAE;;KAGDR,QAXH;AAcH;AAgBD,IAAMS,wBAAoBP,4BAAiC;EACzDC,sBAAkBD,wBAAA;EAClBE,aAASF,wBAAA;EACTK,2BAAuBL,wBAAA;EACvBD,mBAAeC,wBAAA;EACfG,oBAAgBH,wBAAA;EAChBI,uBAAmBJ,wBAAA;EACnBM,wBAAoBN,wBAAA;AAPqC,CAAjC;AAU1B,SAASS,gBAAT;AACE,aAAOT,yBAAiBO,iBAAjB;AACR;AAED,SAAgBG,mBAAAA;AACd,SAAOD,cAAa,EAAG,eAAH;AACrB;AAED,SAAgBE,sBAAAA;AACd,SAAOF,cAAa,EAAG,kBAAH;AACrB;AAED,SAAgBG,yBAAAA;AACd,MAAMX,mBAAmBU,oBAAmB;AAC5C,SAAO,SAACE,QAAD;AACL,QAAIA,WAAW,QAAQZ,iBAAiBa,YAAY,MAAM;AACxD9B,mBAAaiB,iBAAiBa,OAAlB;;AAGdb,qBAAiBa,UAAUD;;AAE9B;AAED,SAAgBE,aAAAA;AACd,SAAON,cAAa,EAAG,SAAH;AACrB;AAED,SAAgBO,oBAAAA;AACd,SAAOP,cAAa,EAAG,gBAAH;AACrB;AAED,SAAgBQ,uBAAAA;AACd,SAAOR,cAAa,EAAG,mBAAH;AACrB;AAED,SAAgBS,2BAAAA;AACd,SAAOT,cAAa,EAAG,uBAAH;AACrB;AAED,SAAgBU,wBAAAA;AACd,SAAOV,cAAa,EAAG,oBAAH;AACrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICzFWW;CAAZ,SAAYA,iBAAAA;AACVA,EAAAA,gBAAAA,QAAAA,IAAA;AACAA,EAAAA,gBAAAA,UAAAA,IAAA;AACD,GAHWA,mBAAAA,iBAAc,CAAA,EAA1B;AAKA,IAAYC;CAAZ,SAAYA,aAAAA;AACVA,EAAAA,YAAAA,QAAAA,IAAA;AACAA,EAAAA,YAAAA,OAAAA,IAAA;AACAA,EAAAA,YAAAA,SAAAA,IAAA;AACAA,EAAAA,YAAAA,QAAAA,IAAA;AACAA,EAAAA,YAAAA,UAAAA,IAAA;AACD,GANWA,eAAAA,aAAU,CAAA,EAAtB;AAQA,IAAYC;CAAZ,SAAYA,QAAAA;AACVA,EAAAA,OAAAA,MAAAA,IAAA;AACAA,EAAAA,OAAAA,OAAAA,IAAA;AACAA,EAAAA,OAAAA,MAAAA,IAAA;AACD,GAJWA,UAAAA,QAAK,CAAA,EAAjB;AAMA,IAAYC;CAAZ,SAAYA,YAAAA;AACVA,EAAAA,WAAAA,SAAAA,IAAA;AACAA,EAAAA,WAAAA,OAAAA,IAAA;AACAA,EAAAA,WAAAA,cAAAA,IAAA;AACAA,EAAAA,WAAAA,QAAAA,IAAA;AACAA,EAAAA,WAAAA,aAAAA,IAAA;AACAA,EAAAA,WAAAA,MAAAA,IAAA;AACD,GAPWA,cAAAA,YAAS,CAAA,EAArB;AASA,IAAYC;CAAZ,SAAYA,aAAAA;AACVA,EAAAA,YAAAA,WAAAA,IAAA;AACAA,EAAAA,YAAAA,QAAAA,IAAA;AACAA,EAAAA,YAAAA,gBAAAA,IAAA;AACAA,EAAAA,YAAAA,gBAAAA,IAAA;AACAA,EAAAA,YAAAA,YAAAA,IAAA;AACAA,EAAAA,YAAAA,eAAAA,IAAA;AACAA,EAAAA,YAAAA,YAAAA,IAAA;AACAA,EAAAA,YAAAA,SAAAA,IAAA;AACAA,EAAAA,YAAAA,SAAAA,IAAA;AACAA,EAAAA,YAAAA,OAAAA,IAAA;AACD,GAXWA,eAAAA,aAAU,CAAA,EAAtB;AAaA,IAAYC;CAAZ,SAAYA,yBAAAA;AACVA,EAAAA,wBAAAA,QAAAA,IAAA;AACAA,EAAAA,wBAAAA,SAAAA,IAAA;AACD,GAHWA,2BAAAA,yBAAsB,CAAA,EAAlC;;AChDA,IAAMC,oBAAkC,CACtCF,WAAWG,WACXH,WAAWI,QACXJ,WAAWK,gBACXL,WAAWM,gBACXN,WAAWO,YACXP,WAAWQ,eACXR,WAAWS,YACXT,WAAWU,SACXV,WAAWW,SACXX,WAAWY,KAV2B;AAajC,IAAMC,kBAAkC;EAC7CC,MAAM;EACNC,UAAUf,WAAWG;AAFwB;AAU/C,IAAMa,oBAAgB,oBAAA,CAAA,GAAA,kBACnBhB,WAAWG,SADQ,IACI;EACtBY,UAAUf,WAAWG;EACrBW,MAAM;AAFgB,GADJ,kBAKnBd,WAAWI,MALQ,IAKC;EACnBW,UAAUf,WAAWI;EACrBU,MAAM;AAFa,GALD,kBASnBd,WAAWK,cATQ,IASS;EAC3BU,UAAUf,WAAWK;EACrBS,MAAM;AAFqB,GATT,kBAanBd,WAAWM,cAbQ,IAaS;EAC3BS,UAAUf,WAAWM;EACrBQ,MAAM;AAFqB,GAbT,kBAiBnBd,WAAWO,UAjBQ,IAiBK;EACvBQ,UAAUf,WAAWO;EACrBO,MAAM;AAFiB,GAjBL,kBAqBnBd,WAAWQ,aArBQ,IAqBQ;EAC1BO,UAAUf,WAAWQ;EACrBM,MAAM;AAFoB,GArBR,kBAyBnBd,WAAWS,UAzBQ,IAyBK;EACvBM,UAAUf,WAAWS;EACrBK,MAAM;AAFiB,GAzBL,kBA6BnBd,WAAWU,OA7BQ,IA6BE;EACpBK,UAAUf,WAAWU;EACrBI,MAAM;AAFc,GA7BF,kBAiCnBd,WAAWW,OAjCQ,IAiCE;EACpBI,UAAUf,WAAWW;EACrBG,MAAM;AAFc,GAjCF,kBAqCnBd,WAAWY,KArCQ,IAqCA;EAClBG,UAAUf,WAAWY;EACrBE,MAAM;AAFY,GArCA;AA2CtB,SAAgBG,qBACdC,WAAAA;AAEA,SAAOhB,kBAAkB5D,IAAI,SAAAyE,UAAQ;AACnC,WAAA,SAAA,CAAA,GACKC,iBAAiBD,QAAD,GACfG,aAAaA,UAAUH,QAAD,KAAcG,UAAUH,QAAD,CAFnD;GADK;AAMR;AAED,SAAgBI,2BAA2BJ,UAAAA;AACzC,SAAOA,SAASA;AACjB;AAED,SAAgBK,+BAA+BL,UAAAA;AAC7C,SAAOA,SAASD;AACjB;AAWD,SAAgBO,sBACdC,sBACAJ,WAAAA;;MADAI,yBAAAA,QAAAA;AAAAA,2BAA2C,CAAA;;MAC3CJ,cAAAA,QAAAA;AAAAA,gBAAqC,CAAA;;AAErC,MAAMK,QAAQ,CAAA;AAEd,MAAIL,UAAUM,mBAAmB5B,eAAe6B,QAAQ;AACtDF,UAAMvB,WAAWG,SAAZ,IAAyBU;;AAGhC,MAAMa,OAAOT,qBAAqBM,KAAD;AACjC,MAAI,GAAA,wBAACD,yBAAD,QAAC,sBAAsBK,SAAQ;AACjC,WAAOD;;AAGT,SAAOJ,qBAAqBhF,IAAI,SAAAyE,UAAQ;AACtC,QAAI,OAAOA,aAAa,UAAU;AAChC,aAAOa,wBAAwBb,UAAUQ,MAAMR,QAAD,CAAhB;;AAGhC,WAAA,SAAA,CAAA,GACKa,wBAAwBb,SAASA,UAAUQ,MAAMR,SAASA,QAAV,CAAzB,GACvBA,QAFL;GALK;AAUR;AAED,SAASa,wBACPb,UACAc,UAFF;MAEEA,aAAAA,QAAAA;AAAAA,eAA2B,CAAA;;AAE3B,SAAO5E,OAAO6E,OAAOd,iBAAiBD,QAAD,GAAYc,QAA1C;AACR;AChID,IAAME,gBACJ;AACF,IAAMC,mBACJ;AACF,IAAMC,kBACJ;AACF,IAAMC,iBACJ;AAEF,SAAgBC,OAAOC,YAAAA;AACrB,UAAQA,YAAR;IACE,KAAKvC,WAAWwC;AACd,aAAOJ;IACT,KAAKpC,WAAWyC;AACd,aAAOJ;IACT,KAAKrC,WAAW0C;AACd,aAAOP;IACT,KAAKnC,WAAW2C;IAChB;AACE,arBD,IAAMU,qBAAqB,CACzB1C,UAAU2C,SACV3C,UAAU4C,OACV5C,UAAU6C,cACV7C,UAAU8C,QACV9C,UAAU+C,aACV/C,UAAUgD,IANe;AASpB,IAAMC,iBAAiB/F,OAAOC,QAAQ6C,SAAf,EAA0BnD,OACtD,SAACqG,KAAD,MAAA;MAAO7F,MAAAA,KAAAA,CAAAA,GAAKC,QAAAA,KAAAA,CAAAA;AACV4F,MAAI5F,KAAD,IAAUD;AACb,SAAO6F;AACR,GACD,CAAA,CAL4B;AAQvB,IAAMC,kBAGTT,mBAAmB7F,OACrB,SAACuG,QAAQC,UAAT;AAAA,MAAA;AAAA,SACEnG,OAAO6E,OAAOqB,SAAd,iBAAA,CAAA,GAAA,eACGC,QADH,IACcA,UADd,eAAA;AADF,GAIA,CAAA,CALE;ACpBJ,IAAYC;CAAZ,SAAYA,kBAAAA;AACVA,EAAAA,iBAAAA,MAAAA,IAAA;AACAA,EAAAA,iBAAAA,SAAAA,IAAA;AACAA,EAAAA,iBAAAA,YAAAA,IAAA;AACAA,EAAAA,iBAAAA,UAAAA,IAAA;AACAA,EAAAA,iBAAAA,QAAAA,IAAA;AACD,GANWA,oBAAAA,kBAAe,CAAA,EAA3B;ACCO,IAAMC,yBAAoC,CAAA;AAEjDC,WAAW,WAAA;AACTC,YAAU5G,OAAO,SAAC6G,aAAaC,OAAd;AACfC,eAAWD,KAAD;AACV,WAAOD;KACNH,sBAHH;AAID,CALS;AASV,SAAgBK,WAAWD,OAAAA;AACzB,MAAME,mBAAmBC,WAAWH,KAAD,EAChCI,KADsB,EAEtBtH,KAAK,EAFiB,EAGtBuH,YAHsB,EAItBC,QAAQ,gBAAgB,EAJF,EAKtBC,MAAM,EALgB;AAOzBL,mBAAiBzG,QAAQ,SAAA+G,OAAI;;AAC3BZ,2BAAuBY,KAAD,KAAtB,wBAA+BZ,uBAAuBY,KAAD,MAArD,OAAA,wBAA+D,CAAA;AAE/DZ,2BAAuBY,KAAD,EAAOC,aAAaT,KAAD,CAAzC,IAAoDA;GAHtD;AAKD;SCfeG,WAAWH,OAAAA;;AACzB,UAAA,wBAAOA,MAAML,gBAAgBvC,IAAjB,MAAZ,OAAA,wBAAsC,CAAA;AACvC;AAED,SAAgBsD,QAAQV,OAAAA;AACtB,SAAOW,WAAWX,MAAML,gBAAgBiB,QAAjB,CAAN;AAClB;AAED,SAAgBC,UAAUb,OAAAA;AACxB,MAAI,CAACA,OAAO;AACV,WAAO;;AAGT,SAAOG,WAAWH,KAAD,EAAQ,CAAlB;AACR;AAED,SAAgBc,uBAAuBC,SAAAA;AACrC,MAAMC,QAAQD,QAAQR,MAAM,GAAd;AACd,MAAA,gBAAmBS,MAAMC,OAAO,GAAG,CAAhB,GAAZvB,WAAP,cAAA,CAAA;AAEA,MAAIF,gBAAgBE,QAAD,GAAY;AAC7B,WAAOsB,MAAMlI,KAAK,GAAX;;AAGT,SAAOiI;AACR;AAED,SAAgBN,aAAaT,OAAkBN,UAAAA;;AAC7C,MAAMqB,UAAUf,MAAML,gBAAgBoB,OAAjB;AAErB,MAAI,CAACrB,YAAY,CAACwB,mBAAmBlB,KAAD,GAAS;AAC3C,WAAOe;;AAGT,UAAA,wBAAOI,sBAAsBnB,OAAON,QAAR,MAA5B,OAAA,wBAAiDqB;AAClD;AAED,SAAgBK,iBAAiB/D,UAAAA;;AAE/B,UAAA,mBAAOgE,UAAP,OAAA,SAAOA,OAAShE,QAAH,MAAb,OAAA,mBAA6B,CAAA;AAC9B;AAGD,SAAgBiE,kBACdP,SACArC,YAAAA;AAEA,SAAA,KAAUD,OAAOC,UAAD,IAAeqC,UAA/B;AACD;AAED,SAAgBQ,gBAAgBvB,OAAAA;;AAC9B,UAAA,yBAAOA,MAAML,gBAAgB6B,UAAjB,MAAZ,OAAA,yBAA4C,CAAA;AAC7C;AAED,SAAgBN,mBAAmBlB,OAAAA;AACjC,SAAOuB,gBAAgBvB,KAAD,EAAQ/B,SAAS;AACxC;AAED,SAAgBkD,sBACdnB,OACAN,UAAAA;AAEA,SAAOA,WACH6B,gBAAgBvB,KAAD,EAAQyB,KAAK,SAAAC,WAAS;AAAA,WAAIA,UAAUC,SAASjC,QAAnB;GAAzC,IACAe,aAAaT,KAAD;AACjB;AAED,SAAgB4B,eAAeb,SAAAA;AAC7B,MAAI,CAACA,SAAS;AACZ;;AAGF,MAAIc,mBAAmBd,OAAD,GAAW;AAC/B,WAAOc,mBAAmBd,OAAD;;AAG3B,MAAMe,kBAAkBhB,uBAAuBC,OAAD;AAC9C,SAAOc,mBAAmBC,eAAD;AAC1B;AAEM,IAAMhC,YAAwBvG,OAAOwI,OAAOV,MAAd,EAAsBjB,KAAtB;AAErC,SAAgB4B,gBAAgBC,cAAAA;AAC9BZ,SAAO/E,WAAWI,MAAZ,EAAoBuB,SAAS;AAEnCgE,eAAaxI,QAAQ,SAAAuG,OAAK;AACxB,QAAMkC,YAAYC,qBAAqBnC,KAAD;AAEtCqB,WAAO/E,WAAWI,MAAZ,EAAoBtD,KAAK8I,SAA/B;AAEA,QAAIL,mBAAmBK,UAAUvC,gBAAgBoB,OAAjB,CAAV,GAAsC;AAC1D;;AAGFjB,cAAU1G,KAAK8I,SAAf;AACAL,uBAAmBK,UAAUvC,gBAAgBoB,OAAjB,CAAV,IAAuCmB;AACzDjC,eAAWiC,SAAD;GAXZ;AAaD;AAED,SAASC,qBAAqBnC,OAA9B;;AACE,SAAA,OAAA,CAAA,GAAA,KACGL,gBAAgBvC,IADnB,IAC0B4C,MAAMoC,MAAMxJ,IAAI,SAAAwE,MAAI;AAAA,WAAIA,KAAKiD,YAAL;GAAxB,GAD1B,KAEGV,gBAAgBoB,OAFnB,IAE6Bf,MAAMqC,GAAGhC,YAAT,GAF7B,KAGGV,gBAAgBiB,QAHnB,IAG8B,KAH9B,KAIGjB,gBAAgB2C,MAJnB,IAI4BtC,MAAMsC,QAJlC;AAMD;AAED,IAAMT,qBAEF,CAAA;AAEJhC,WAAW,WAAA;AACTC,YAAU5G,OAAO,SAAC4G,YAAWyC,OAAZ;AACfzC,IAAAA,WAAUW,aAAa8B,KAAD,CAAb,IAAwBA;AAEjC,QAAIrB,mBAAmBqB,KAAD,GAAS;AAC7BhB,sBAAgBgB,KAAD,EAAQ9I,QAAQ,SAAAiI,WAAS;AACtC5B,QAAAA,WAAU4B,SAAD,IAAca;OADzB;;AAKF,WAAOzC;KACN+B,kBAVH;AAWD,CAZS;AAcV,SAAgBW,2BAA2BzB,SAAAA;AACzC,MAAA,iBAA8BA,QAAQR,MAAM,GAAd,GAArBkC,oBAAT,eAAA,CAAA;AACA,SAAO1D,mBAAmB4C,SAASc,iBAA5B,IACHA,oBACA;AACL;AC3HD,IAAMC,uBAAuB,CAAC,aAAa,aAAa,WAA3B;AAEtB,IAAMC,6BAA6B;AACnC,IAAMC,kCAAkC;AACxC,IAAMC,wBACX;AACK,IAAMC,kCACX,aAAaD;AACR,IAAME,wCACX,eAAeF;AAEjB,SAAgBG,YACdC,YAAAA;;MAAAA,eAAAA,QAAAA;AAAAA,iBAA2B,CAAA;;AAE3B,MAAMjF,OAAOkF,iBAAgB;AAE7B,MAAMC,gBAAgB5J,OAAO6E,OAC3BJ,KAAKmF,gBADe,wBAEpBF,WAAWE,kBAFS,OAAA,wBAEQ,CAAA,CAFR;AAItB,MAAMC,SAAS7J,OAAO6E,OAAOJ,MAAMiF,UAApB;AAEf,MAAMI,aAAa1F,sBAAsBsF,WAAWI,YAAY;IAC9DvF,gBAAgBsF,OAAOE;GADe;AAIxCtB,mBAAe,uBAACoB,OAAOnB,iBAAR,OAAA,uBAAwB,CAAA,CAAxB;AAEf,MAAMsB,yBAAyBH,OAAOI,iBAClCjH,uBAAuBkH,UACvBL,OAAOG;AAEX,SAAA,SAAA,CAAA,GACKH,QADL;IAEEC;IACAF;IACAI;;AAEH;AAED,SAAgBL,mBAAAA;AACd,SAAO;IACLQ,iBAAiB;IACjBL,YAAY9F,qBAAoB;IAChC0E,cAAc,CAAA;IACd0B,iBAAiBtH,UAAU2C;IAC3BN,YAAYvC,WAAW2C;IACvB8E,cAAc;IACdC,aAAavC;IACbwC,QAAQ;IACRC,gBAAgB;IAChBZ,eAAa,SAAA,CAAA,GACRa,iBADQ;IAGbR,gBAAgB;IAChBS,mBAAmBtB;IACnBuB,mBAAmBvB;IACnBY,wBAAwBhH,uBAAuB4H;IAC/CC,mBAAmB;IACnBd,qBAAqBpH,eAAemI;IACpCC,OAAOlI,MAAM6C;IACbsF,eAAe,IAAIC,IAAY9B,oBAAhB;IACf+B,OAAO;;AAEV;AA8BD,IAAMT,oBAAmC;EACvCU,cAAc;EACdC,gBAAgB;EAChBC,aAAa;AAH0B;;ACrGzC,IAAMC,oBAAgB/J,4BACpBoI,iBAAgB,CADI;AAItB,SAAgB4B,qBAAAA,MAAAA;MAAuBlK,WAAAA,KAAAA,UAAawI,SAAAA,8BAAAA,MAAAA,SAAAA;AAClD,MAAM2B,eAAeC,aAAa5B,MAAD;AAEjC,aACEtI,4BAAC+J,cAAcvJ,UAAf;IAAwB3B,OAAOoL;KAC5BnK,QADH;AAIH;AAED,SAAgBoK,aAAa5B,QAAAA;;AAC3B,MAAA,sBAAwCtI,uBAAe,WAAA;AAAA,WACrDkI,YAAYI,MAAD;GAD2B,GAAjC2B,eAAP,gBAAA,CAAA,GAAqBE,kBAArB,gBAAA,CAAA;AAIAnK,8BAAgB,WAAA;;AACd,UAAI,uBAAAsI,OAAOnB,iBAAP,OAAA,SAAA,qBAAqBhE,cAArB,wBAAgC8G,aAAa9C,iBAA7C,OAAA,SAAgC,sBAA2BhE,SAAQ;AACrEgH,sBAAgBjC,YAAYI,MAAD,CAAZ;;KAIhB,EAAA,wBAACA,OAAOnB,iBAAR,OAAA,SAAC,sBAAqBhE,MAAtB,CANH;AAQA,SAAO8G;AACR;AAED,SAAgBG,kBAAAA;AACd,aAAOpK,yBAAiB+J,aAAjB;AACR;ACtCM,IAAMM,uBAAuBrK,aAAAA,QAAMsK,cAExC,CAAA,CAFkC;AAIpC,SAAgBC,mBAAAA;AACd,MAAMC,gBAAgBxK,aAAAA,QAAMyK,WAAWJ,oBAAjB;AACtB,SAAOG;AACR;AAED,SAAgBE,uBACdpC,QAAAA;AAEA,MAAMqC,mBAAmB3K,aAAAA,QAAM4K,OAAsB;IACnDC,cAAcvC,OAAOuC,gBAAgBC;GADd;AAIzB9K,eAAAA,QAAM+K,UAAU,WAAA;AACdJ,qBAAiB7J,QAAQ+J,eAAevC,OAAOuC,gBAAgBC;KAC9D,CAACxC,OAAOuC,YAAR,CAFH;AAIA,SAAOF;AACR;AAED,SAASG,YAAT;AAAA;SCTgBE,6BAAAA;;AACd,MAAA,mBAAiDZ,gBAAe,GAAxDjB,oBAAR,iBAAQA,mBAAmBC,oBAA3B,iBAA2BA;AAC3B,UAAA,QACE,CAACD,mBAAmBC,iBAApB,EAAuCzC,KACrC,SAAAsE,GAAC;AAAA,WAAIA,MAAMpD;GADb,MADF,OAAA,QAGOA;AAER;AAED,SAAgBqD,2BAAAA;AACd,MAAA,oBAA4Bd,gBAAe,GAAnCvB,kBAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgBsC,6BAAAA;AACd,MAAA,oBAA8Bf,gBAAe,GAArCd,oBAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgB8B,sBAAAA;AACd,MAAA,oBAAuBhB,gBAAe,GAA9BxG,aAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgByH,2BAAAA;AACd,MAAA,oBAA4BjB,gBAAe,GAAnCxB,kBAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgB0C,sBAAAA;AACd,MAAA,oBAAuBlB,gBAAe,GAA9B7B,aAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgBgD,wBAAAA;AACd,MAAA,oBAAyBnB,gBAAe,GAAhCjD,eAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgBqE,wBAAAA;AAId,MAAA,oBAAoBjB,iBAAgB,GAA5BzJ,UAAR,kBAAQA;AACR,SAAOA,QAAQ+J,gBAAiB,WAAA;EAAA;AACjC;AAED,SAAgBY,mBAAAA;AACd,MAAA,oBAA0BrB,gBAAe,GAAjC/B,gBAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgBqD,iBAAAA;AACd,MAAA,oBAAkBtB,gBAAe,GAAzBZ,QAAR,kBAAQA;AAER,SAAOA;AACR;AAED,SAAgBmC,+BAAAA;AACd,MAAA,qBAAgCvB,gBAAe,GAAvC5B,sBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBoD,0BAAAA;AACd,MAAA,qBAA2BxB,gBAAe,GAAlCnB,iBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgB4C,sBAAAA;AAId,MAAA,qBAA0BzB,gBAAe,GAAjCpB,SAAR,mBAAQA,QAAQW,QAAhB,mBAAgBA;AAChB,SAAO;IAAEX,QAAQ8C,aAAa9C,MAAD;IAAUW,OAAOmC,aAAanC,KAAD;;AAC3D;AAED,SAAgBoC,wBAAAA;AACd,MAAA,qBAAyB3B,gBAAe,GAAhCtB,eAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBkD,0BAAAA;AACd,MAAA,qBAA2B5B,gBAAe,GAAlC1B,iBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBuD,kCAAAA;AACd,MAAA,qBAAmC7B,gBAAe,GAA1C3B,yBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgByD,mBAAAA;AACd,MAAA,qBAA0B9B,gBAAe,GAAjCX,gBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgB0C,uBAAAA;AAId,MAAA,qBAAwB/B,gBAAe,GAA/BrB,cAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAS+C,aAAaM,iBAAtB;AACE,SAAO,OAAOA,oBAAoB,WAC3BA,kBADA,OAEHA;AACL;AAED,SAAgBC,uBAAuBC,oBAAAA;AACrC,MAAMC,aAAaD,qBAAqB;AACxC,MAAME,WAAWF,qBAAqB;AAEtC,MAAIC,YAAY;AACd,WAAOC,WACLvE,sCAAsCzC,QAAQ,MAAM8G,mBAAmBG,SAAnB,CAApD,IACIzE;;AAGR,SAAOF;AACR;SC7Ie4E,kBACdC,cACAC,OAAAA;MAAAA,UAAAA,QAAAA;AAAAA,YAAgB;;AAEhB,MAAA,gBAA0BC,uBAAYF,YAAJ,GAA3BG,QAAP,UAAA,CAAA,GAAcC,WAAd,UAAA,CAAA;AACA,MAAMC,YAAQpC,qBAAsB,IAAhB;AAEpB,WAASqC,kBAAkBpO,OAA3B;AACE,WAAO,IAAIqO,QAAW,SAAAC,SAAO;;AAC3B,UAAIH,MAAMlM,SAAS;AACjBsM,qBAAaJ,MAAMlM,OAAP;;AAGdkM,YAAMlM,WAAN,UAAgBuM,WAAhB,OAAA,SAAgB,QAAQtI,WAAW,WAAA;AACjCgI,iBAASlO,KAAD;AACRsO,gBAAQtO,KAAD;SACN+N,KAHa;KALX;;AAYT,SAAO,CAACE,OAAOG,iBAAR;AACR;SCrBeK,qBAAAA;AACZ,MAAM7D,gBAAgByC,iBAAgB;AACtC,SAAO,SAACvG,eAAD;AAAA,WAA0B8D,cAAc8D,IAAI5H,aAAlB;;AAClC;SCQa6H,sBAAAA;AACd,MAAMC,0BAAsB7C,qBAAgC,CAAA,CAA1B;AAClC,MAAM8C,qBAAqB3B,sBAAqB;AAEhD,aAAO4B,sBAAQ,WAAA;AACb,QAAM7E,eAAejD,WAAU,KAAI6H,kBAAJ;AAE/B,QAAI,CAACA,sBAAsBE,OAAOC,MAAM/E,YAAb,GAA4B;AACrD,aAAO2E,oBAAoB3M;;AAG7B,WAAOkE,UAAU5G,OAAO,SAAC0P,kBAAkB5I,OAAnB;AACtB,UAAI6I,oBAAoB7I,OAAO4D,YAAR,GAAuB;AAC5CgF,yBAAiBnI,aAAaT,KAAD,CAAb,IAAwB;;AAG1C,aAAO4I;OACNL,oBAAoB3M,OANhB;KAON,CAAC4M,kBAAD,CAdW;AAef;AAED,SAAgBM,uBAAAA;AACd,MAAMF,mBAAmBN,oBAAmB;AAC5C,MAAMS,kBAAkBX,mBAAkB;AAE1C,SAAO,SAASY,kBAAkBhJ,OAA3B;AACL,QAAMe,UAAUD,uBAAuBL,aAAaT,KAAD,CAAb;AAEtC,WAAOnG,QAAQ+O,iBAAiB7H,OAAD,KAAagI,gBAAgBhI,OAAD,CAA7C;;AAEjB;AAED,SAAS8H,oBACP7I,OACAiJ,gBAFF;AAIE,SAAOvI,QAAQV,KAAD,IAAUiJ;AACzB;SC/CeC,mBACdC,UAAAA;AAEAtD,8BAAU,WAAA;AACRsD,aAAS,IAAD;KACP,CAACA,QAAD,CAFM;AAGV;SCGeC,sBAAAA,MAAAA;MAAwBxO,WAAAA,KAAAA;AACtC,MAAMgO,mBAAmBN,oBAAmB;AAC5C,MAAM3E,kBAAkBqC,yBAAwB;AAGhD,MAAMqD,gBAAYvO,qBAA0B8E,sBAA1B;AAClB,MAAM0J,uBAAmBxO,qBAAsB,KAAtB;AACzB,MAAMyO,uBAAmBzO,qBAAsB,KAAtB;AACzB,MAAM0O,0BAAsB1O,qBAC1B8N,gBAD0B;AAI5B,MAAMa,uBAAuBjC,kBAAkBkC,KAAKC,IAAL,GAAY,GAAb;AAC9C,MAAMC,aAAapC,kBAAkB,IAAI,GAAL;AACpC,MAAMqC,2BAAuBlC,uBAAkB,KAAV;AACrC,MAAMmC,qBAAiBnC,uBAAoBhE,eAAZ;AAC/B,MAAMoG,0BAAsBpC,uBAA8B,IAAtB;AACpC,MAAMqC,kCAA8BrC,uBAAsB,oBAAInD,IAAJ,CAAd;AAC5C,MAAMyF,gCAA4BtC,uBAA2B,IAAnB;AAC1C,MAAA,gBAAkDA,uBAAS,KAAD,GAAnDuC,oBAAP,UAAA,CAAA,GAA0BC,uBAA1B,UAAA,CAAA;AAEAjB,qBAAmBiB,oBAAD;AAElB,aACErP,4BAACsP,cAAc9O,UAAf;IACE3B,OAAO;MACLoQ;MACAD;MACAR;MACAC;MACAC;MACAS;MACAD;MACAX;MACAa;MACAN;MACAC;MACAJ;;KAGD7O,QAhBH;AAmBH;AAID,IAAMwP,oBAAgBtP,4BAanB;EACDiP,qBAAqB,CAAC,MAAM,WAAA;EAAA,CAAP;EACrBD,gBAAgB,CAACzN,UAAU2C,SAAS,WAAA;EAAA,CAApB;EAChBsK,kBAAkB;IAAE1N,SAAS;;EAC7B2N,kBAAkB;IAAE3N,SAAS;;EAC7B4N,qBAAqB;IAAE5N,SAAS,CAAA;;EAChCqO,2BAA2B,CAAC,MAAM,WAAA;EAAA,CAAP;EAC3BD,6BAA6B,CAAC,oBAAIxF,IAAJ,GAAW,WAAA;EAAA,CAAZ;EAC7B6E,WAAW;IAAEzN,SAAS,CAAA;;EACtBsO,mBAAmB;EACnBN,YAAY,CAAC,IAAI,WAAA;AAAA,WAAM,IAAI5B,QAAgB,WAAA;AAAA,aAAMqC;KAA1B;GAAX;EACZR,sBAAsB,CAAC,OAAO,WAAA;EAAA,CAAR;EACtBJ,sBAAsB,CAACC,KAAKC,IAAL,GAAY,WAAA;EAAA,CAAb;AAZrB,CAbmB;AAgCtB,SAAgBW,eAAAA;AACd,MAAA,wBAAsBxP,yBAAiBsP,aAAjB,GAAdf,YAAR,kBAAQA;AACR,SAAOA;AACR;AAED,SAAgBkB,sBAAAA;AACd,MAAA,yBAA6BzP,yBAAiBsP,aAAjB,GAArBd,mBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBkB,sBAAAA;AACd,MAAA,yBAA6B1P,yBAAiBsP,aAAjB,GAArBb,mBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBkB,qBAAAA;AACd,MAAA,yBAAuB3P,yBAAiBsP,aAAjB,GAAfR,aAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBc,yBAAAA;AAId,MAAA,yBAA2B5P,yBAAiBsP,aAAjB,GAAnBN,iBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBa,iCAAAA;AACd,MAAA,yBAAwC7P,yBAAiBsP,aAAjB,GAAhCJ,8BAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBY,uBAAAA;AACd,MAAA,yBAA8B9P,yBAAiBsP,aAAjB,GAAtBF,oBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBW,+BAAAA;AACd,MAAA,yBAAsC/P,yBAAiBsP,aAAjB,GAA9BH,4BAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAAgBa,0BAAAA;AACd,MAAA,yBAAiChQ,yBAAiBsP,aAAjB,GAAzBP,uBAAR,mBAAQA;AACR,SAAOA;AACR;AAED,SAKgBkB,qBAAAA;AACd,MAAA,0BAAiCjQ,yBAAiBsP,aAAjB,GAAzBX,uBAAR,oBAAQA;AAER,MAAOuB,mBAAwCvB,qBAA/C,CAAA,GAAyBwB,qBAAsBxB,qBAA/C,CAAA;AACA,SAAO,CACLuB,kBACA,SAASE,kBAAT;AACED,uBAAmBvB,KAAKC,IAAL,CAAD;GAHf;AAMR;SCrJewB,uBAAAA;AACd,MAAMC,mBAAmBZ,oBAAmB;AAC5C,SAAO,SAASa,oBAAT;AACLD,qBAAiBxP,UAAU;;AAE9B;AAED,SAAgB0P,oBAAAA;AACd,MAAMF,mBAAmBZ,oBAAmB;AAC5C,SAAO,SAASe,iBAAT;AACLH,qBAAiBxP,UAAU;;AAE9B;AAED,SAAgB4P,uBAAAA;AACd,MAAMJ,mBAAmBZ,oBAAmB;AAC5C,SAAO,SAASiB,oBAAT;AACL,WAAOL,iBAAiBxP;;AAE3B;AAED,SAAgB8P,iBAAAA;AACd,MAAM1Q,UAAUa,WAAU;AAC1B,MAAM0P,iBAAiBD,kBAAiB;AACxC,MAAMG,oBAAoBD,qBAAoB;AAE9C3F,8BAAU,WAAA;AACR,QAAM8F,UAAU3Q,QAAQY;AACxB+P,eAAO,OAAP,SAAAA,QAASC,iBAAiB,aAAaC,aAAa;MAClDC,SAAS;KADX;AAIA,aAASD,cAAT;AACE,UAAIJ,kBAAiB,GAAI;AACvBF,uBAAc;;;AAGlB,WAAO,WAAA;AACLI,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,aAAaF,WAA1C;;KAED,CAAC7Q,SAASuQ,gBAAgBE,iBAA1B,CAdM;AAeV;SC5CeO,kBACdC,QACAlS,SAAAA;AAEA,MAAI,CAACkS,UAAU,CAAClS,SAAS;AACvB,WAAO;;AAGT,MAAMmS,cAAcD,OAAOE,sBAAP,EAA+B1H;AACnD,MAAM2H,eAAerS,QAAQoS,sBAAR,EAAgC1H;AACrD,SAAO4H,KAAKC,MAAMJ,cAAcE,YAAzB;AACR;AAED,SAAgBG,kBACdN,QACAlS,SAAAA;AAEA,MAAI,CAACkS,UAAU,CAAClS,SAAS;AACvB,WAAO;;AAGT,MAAMqS,eAAerS,QAAQoS,sBAAR,EAAgC1H;AACrD,MAAM+H,cAAczS,QAAQoS,sBAAR,EAAgCM;AACpD,MAAMC,aAAaT,OAAOE,sBAAP,EAA+BM;AAElD,SAAOJ,KAAKC,OAAOE,cAAcE,cAAcN,YAAxC;AACR;AAED,SAAgBO,UACdV,QACAlS,SAAAA;AAEA,MAAI,CAACkS,UAAU,CAAClS,SAAS;AACvB,WAAO;;AAGT,MAAM6S,iBAAgB7S,QAAQoS,sBAAR,EAAgCrI;AACtD,MAAM+I,aAAa9S,QAAQoS,sBAAR,EAAgCW;AACnD,MAAMC,YAAYd,OAAOE,sBAAP,EAA+BW;AACjD,SAAOT,KAAKW,OAAOH,aAAaE,aAAaH,cAAtC;AACR;AAED,SAAgBK,WACdhB,QACAlS,SAAAA;AAEA,MAAI,CAACkS,UAAU,CAAClS,SAAS;AACvB,WAAO;;AAGT,MAAM6S,iBAAgB7S,QAAQoS,sBAAR,EAAgCrI;AACtD,MAAM+I,aAAa9S,QAAQoS,sBAAR,EAAgCW;AACnD,MAAMC,YAAYd,OAAOE,sBAAP,EAA+BW;AACjD,MAAMI,eAAejB,OAAOE,sBAAP,EAA+BrI;AAEpD,SAAOuI,KAAKW,MAAMH,aAAaE,YAAYH,cAApC,IAAqDM;AAC7D;AAED,SAASC,eACPC,UACAC,KACAC,eAHF;AAKE,MAAID,QAAQ,IAAI;AACd,QAAME,UAAUlB,KAAKC,OAAOc,SAASnP,SAAS,KAAKqP,aAAnC;AAChB,QAAME,oBAAoBD,UAAUD;AACpC,QAAMG,mBAAmBL,SAASnP,SAAS;AAC3C,WAAOmP,SAASM,MAAMF,mBAAmBC,mBAAmB,CAArD;;AAGT,SAAOL,SAASM,MAAML,MAAMC,gBAAgBD,MAAM,KAAKC,aAAhD;AACR;AAED,SAASK,mBACPC,aACAC,YACAP,eAHF;AAKE,MAAMQ,UAAUD,aAAa;AAE7B,MAAIC,UAAUR,gBAAgBM,YAAY3P,QAAQ;AAChD,WAAO,CAAA;;AAGT,SAAOkP,eAAeS,aAAaE,SAASR,aAAvB;AACtB;AAED,SAAgBS,gBACdX,UACAC,KACAC,eACAU,YAAAA;AAEA,MAAMC,cAAcd,eAAeC,UAAUC,KAAKC,aAAhB;AAElC,SAAOW,YAAYD,UAAD,KAAgBC,YAAYA,YAAYhQ,SAAS,CAAtB,KAA4B;AAC1E;AAED,SAAgBiQ,oBACdN,aACAC,YACAP,eACAa,OAAAA;AAEA,MAAMC,kBAAkBT,mBACtBC,aACAC,YACAP,aAHwC;AAO1C,SACEc,gBAAgBD,KAAD,KACfC,gBAAgBA,gBAAgBnQ,SAAS,CAA1B,KACf;AAEH;AAED,SAAgBoQ,oBACdT,aACAC,YACAP,eACAa,OAAAA;AAEA,MAAMG,kBAAkBnB,eACtBS,aACAC,aAAa,GACbP,aAHoC;AAOtC,SACEgB,gBAAgBH,KAAD,KACfG,gBAAgBA,gBAAgBrQ,SAAS,CAA1B,KACf;AAEH;AAED,SAAgBsQ,+BACdtC,QACAmB,UAAAA;AAEA,MAAI,CAACnB,UAAU,CAACmB,SAASnP,QAAQ;AAC/B,WAAO;;AAGT,MAAM8O,YAAYd,OAAOE,sBAAP,EAA+BW;AACjD,MAAM0B,eAAevC,OAAOE,sBAAP,EAA+BsC;AAEpD,MAAMC,kBAAkBtB,SAAS3L,KAAK,SAAA1H,SAAO;AAC3C,QAAM8S,aAAa9S,QAAQoS,sBAAR,EAAgCW;AACnD,QAAM6B,gBAAgB5U,QAAQoS,sBAAR,EAAgCsC;AAEtD,WACG5B,cAAcE,aAAaF,cAAc2B,gBACzCG,iBAAiB5B,aAAa4B,iBAAiBH;GAN5B;AAUxB,SAAOE,mBAAmB;AAC3B;AAED,SAAgBE,sBAAsB7U,SAAAA;AACpC,SAAO,CAAC,CAACA,QAAQQ;AAClB;AC3JM,IAAMsU,sBAAmB,WAAYnW,YAAYD,WAAWuH,KAAZ;AAChD,IAAM8O,uBAAuB,CAClCD,qBACAnW,YAAYD,WAAWsW,OAAZ,GAFuB,UAG1BrW,YAAYD,WAAWuW,MAAZ,IAHe,GAAA,EAIlClW,KAAK,EAJ6B;AAMpC,SAAgBmW,iBACdC,cAAAA;;AAEA,UAAA,wBAAOA,gBAAP,OAAA,SAAOA,aAAcC,QAAQN,mBAAtB,MAAP,OAAA,wBAAqD;AACtD;AAED,SAQgBO,iBACdrV,SAAAA;AAEA,MAAMsV,kBAAkBC,gCAAgCvV,OAAD;AACvD,MAAMgH,UAAUwO,wBAAwBxV,OAAD;AAEvC,MAAI,CAACsV,iBAAiB;AACpB,WAAO,CAAA;;AAGT,MAAMrP,QAAQ4B,eAAeb,WAAD,OAACA,UAAWsO,eAAZ;AAE5B,MAAI,CAACrP,OAAO;AACV,WAAO,CAAA;;AAGT,SAAO,CAACA,OAAOe,OAAR;AACR;AAED,SAAgByO,eAAezV,SAAAA;;AAC7B,SAAOF,SACLE,WAAO,OAAP,SAAAA,QAAS0V,QAAQZ,mBAAjB,OACE9U,WADF,OAAA,UAAA,wBACEA,QAAS2V,kBADX,OAAA,SACE,sBAAwBD,QAAQZ,mBAAhC,EAFU;AAIf;AAED,SAagBjC,cAAc7S,SAAAA;;AAC5B,UAAA,wBAAOA,WAAP,OAAA,SAAOA,QAAS4V,iBAAhB,OAAA,wBAAgC;AACjC;AAED,SAAgBC,mBAAmB7V,SAAAA;AACjC,MAAI,CAACA,SAAS;AACZ,WAAO;;AAGT,MAAM8V,SAASZ,iBAAiBlV,OAAD;AAC/B,MAAMsD,WAAWyS,gBAAgBD,MAAD;AAGhC,MAAME,cAAcC,oBAAoB3S,QAAD;AAEvC,SAAO4S,iBAAiBJ,MAAD,IAAWI,iBAAiB5S,QAAD,IAAa0S;AAChE;AAED,SAAgBC,oBAAoB3S,UAAAA;;AAClC,MAAI,CAACA,UAAU;AACb,WAAO;;AAGT,MAAM6S,uBAAuB7S,SAAS8S,cACpCzX,YAAYD,WAAW2X,eAAZ,CADgB;AAI7B,WACE,wBAAC/S,YAAD,OAAA,SAACA,SAAUsS,iBAAX,OAAA,wBAA2B,OAA3B,wBAAiCO,wBAAjC,OAAA,SAAiCA,qBAAsBP,iBAAvD,OAAA,wBAAuE;AAE1E;AAED,SAAgBU,mBAAmBrQ,OAAAA;AACjC,MAAI,CAACA,OAAO;AACV,WAAO;;AAGT,SACEsQ,2BAA2BtQ,KAAD,IAC1BgQ,oBAAoBF,gBAAgB9P,KAAD,CAAhB;AAEtB;AAED,SAAgBuQ,gBAAgBC,MAAAA;AAC9B,MAAI,CAACA;AAAM,WAAO;AAElB,SAAOA,KAAKf,QAAQ/W,YAAYD,WAAWgY,UAAZ,CAAxB,IACHD,OACAA,KAAKL,cAAczX,YAAYD,WAAWgY,UAAZ,CAA9B;AACL;AAED,SAAgBH,2BAA2BtQ,OAAAA;;AACzC,MAAI,CAACA,OAAO;AACV,WAAO;;AAGT,SAAO4P,mBAAmB5P,KAAD,MAAlB,yBAAA,qBAA6B0Q,kBAAkB1Q,KAAD,MAA9C,OAAA,SAA6B,mBAA0B2Q,cAAvD,OAAA,wBAAoE;AAC5E;AAED,SAAgBD,kBAAkB3W,SAAAA;;AAChC,MAAI,CAACA,SAAS;AACZ,WAAO;;AAGT,UAAA,mBAAOA,QAAQoV,QAAQzW,YAAYD,WAAWgY,UAAZ,CAA3B,MAAP,OAAA,mBAA8D;AAC/D;AAED,SAAgBG,mBAAmB7W,SAAAA;AACjC,MAAM8V,SAASZ,iBAAiBlV,OAAD;AAC/B,MAAMsD,WAAWyS,gBAAgBD,MAAD;AAEhC,SAAOgB,kBAAkBhB,MAAD,IAAWgB,kBAAkBxT,QAAD;AACrD;AAED,SAAS4S,iBAAiBlW,SAA1B;;AACE,UAAA,qBAAOA,WAAP,OAAA,SAAOA,QAAS+W,cAAhB,OAAA,qBAA6B;AAC9B;AAED,SAASD,kBAAkB9W,SAA3B;;AACE,UAAA,sBAAOA,WAAP,OAAA,SAAOA,QAASgX,eAAhB,OAAA,sBAA8B;AAC/B;AAED,SAAgBxB,wBAAwBvP,OAAAA;;AACtC,UAAA,qBAAOgR,kBAAkB/B,iBAAiBjP,KAAD,GAAS,SAA1B,MAAxB,OAAA,qBAAgE;AACjE;AAED,SAAgBsP,gCACdtP,OAAAA;AAEA,MAAMe,UAAUwO,wBAAwBvP,KAAD;AAEvC,MAAIe,SAAS;AACX,WAAOD,uBAAuBC,OAAD;;AAE/B,SAAO;AACR;AAED,SAASiQ,kBACPjX,SACAL,KAFF;;AAIE,UAAA,sBAAOuX,eAAelX,OAAD,EAAUL,GAAxB,MAAP,OAAA,sBAAuC;AACxC;AAED,SAASuX,eAAelX,SAAxB;;AACE,UAAA,mBAAOA,WAAP,OAAA,SAAOA,QAASmX,YAAhB,OAAA,mBAA2B,CAAA;AAC5B;AAED,SAAgBC,eAAepX,SAAAA;AAC7B,SAAOA,QAAQqX,UAAUC,SAAS5Y,WAAWsW,OAAtC;AACR;AAED,SAAgBuC,SAASvX,SAAAA;AACvB,MAAI,CAACA;AAAS,WAAO;AAErB,SAAOA,QAAQqX,UAAUC,SAAS5Y,WAAWuW,MAAtC;AACR;AAED,SAAgBuC,iBAAiBtF,QAAAA;AAC/B,MAAI,CAACA,QAAQ;AACX,WAAO,CAAA;;AAGT,SAAO5S,MAAMmY,KACXvF,OAAOwF,iBAAiB3C,oBAAxB,CADK;AAGR;AAED,SAAgB4C,iBAAiB3X,SAAAA;AAC/B,MAAI,CAACA;AAAS,WAAO;AAErB,MAAM+F,aAAYyR,iBAAiBxX,OAAD;AAClC,MAAA,mBAAe+F,WAAU4N,MAAM,EAAhB,GAARiE,OAAP,iBAAA,CAAA;AACA,MAAI,CAACA,MAAM;AACT,WAAO;;AAGT,MAAI,CAACR,eAAeQ,IAAD,GAAQ;AACzB,WAAOC,iBAAiBD,IAAD;;AAGzB,SAAOA;AACR;AAED,SAAgBE,iBAAiB9X,SAAAA;AAC/B,MAAMO,OAAOP,QAAQQ;AAErB,MAAI,CAACD,MAAM;AACT,WAAOwX,kBAAkBC,aAAahY,OAAD,CAAb;;AAG1B,MAAI,CAACoX,eAAe7W,IAAD,GAAQ;AACzB,WAAOuX,iBAAiBvX,IAAD;;AAGzB,SAAOA;AACR;AAED,SAAgBsX,iBAAiB7X,SAAAA;AAC/B,MAAMI,OAAOJ,QAAQK;AAErB,MAAI,CAACD,MAAM;AACT,WAAOuX,iBAAiBM,aAAajY,OAAD,CAAb;;AAGzB,MAAI,CAACoX,eAAehX,IAAD,GAAQ;AACzB,WAAOyX,iBAAiBzX,IAAD;;AAGzB,SAAOA;AACR;AAED,SAAgB2X,kBAAkB7F,QAAAA;AAChC,MAAI,CAACA,QAAQ;AACX,WAAO;;AAGT,MAAMnM,aAAYyR,iBAAiBtF,MAAD;AAElC,SAAOsC,+BAA+BtC,QAAQnM,UAAT;AACtC;AAED,SAAgBkS,aAAajY,SAAAA;AAC3B,MAAMsD,WAAWyS,gBAAgB/V,OAAD;AAEhC,MAAI,CAACsD,UAAU;AACb,WAAO;;AAGT,MAAMlD,OAAOkD,SAASjD;AAEtB,MAAI,CAACD,MAAM;AACT,WAAO;;AAGT,MAAImX,SAASnX,IAAD,GAAQ;AAClB,WAAO6X,aAAa7X,IAAD;;AAGrB,SAAOA;AACR;AAED,SAAgB4X,aAAahY,SAAAA;AAC3B,MAAMsD,WAAWyS,gBAAgB/V,OAAD;AAEhC,MAAI,CAACsD,UAAU;AACb,WAAO;;AAGT,MAAM/C,OAAO+C,SAAS9C;AAEtB,MAAI,CAACD,MAAM;AACT,WAAO;;AAGT,MAAIgX,SAAShX,IAAD,GAAQ;AAClB,WAAOyX,aAAazX,IAAD;;AAGrB,SAAOA;AACR;AAED,SAAgBwV,gBAAgB/V,SAAAA;AAC9B,MAAI,CAACA,SAAS;AACZ,WAAO;;AAET,SAAOA,QAAQoV,QAAQzW,YAAYD,WAAW4E,QAAZ,CAA3B;AACR;AAED,SAAgB4U,uBAAuBlY,SAAAA;AACrC,MAAI,CAACA,SAAS;AACZ,WAAO;;AAET,SAAOA,QAAQoV,QACbzW,YAAYD,WAAW2X,eAAZ,CADN;AAGR;SCnTe8B,iBAAiBnR,SAAAA;AAC/B,SAAOA,QACJR,MAAM,GADF,EAEJ3H,IAAI,SAAAuZ,KAAG;AAAA,WAAIC,OAAOC,cAAcC,SAASH,KAAK,EAAN,CAA7B;GAFP,EAGJrZ,KAAK,EAHD;AAIR;ACAD,IAAMyZ,mBAAmB;AAUzB,SAAgBC,aAAaC,MAAAA;AAC3B,MAAI;AAAA,QAAA,SAAA,uBAAA;AACF,QAAI,GAAA,UAACtK,WAAD,QAAC,QAAQuK,eAAc;AACzB,aAAO,CAAA;;AAET,QAAMC,SAASC,KAAKC,OAAL,yBAAA,WACb1K,WADa,OAAA,SACb,SAAQuK,aAAaI,QAAQP,gBAA7B,MADa,OAAA,wBACqC,IADrC;AAIf,QAAIE,SAASvW,eAAemI,UAAU;AACpC,aAAOsO,OAAOI,KAAK,SAACC,GAAGC,GAAJ;AAAA,eAAUA,EAAEC,QAAQF,EAAEE;OAAlC;;AAGT,WAAOP;WACP,SAAM;AACN,WAAO,CAAA;;AAEV;AAED,SAAgBQ,aAAanT,OAAkBN,UAAAA;AAC7C,MAAMiT,SAASH,aAAY;AAE3B,MAAMzR,UAAUN,aAAaT,OAAON,QAAR;AAC5B,MAAM2P,kBAAkB5O,aAAaT,KAAD;AAEpC,MAAIoT,WAAWT,OAAOlR,KAAK,SAAA,MAAA;AAAA,QAAY4R,IAAZ,KAAGtS;AAAH,WAAoBsS,MAAMtS;GAAtC;AAEf,MAAIuS;AAEJ,MAAIF,UAAU;AACZE,eAAW,CAACF,QAAD,EAAWG,OAAOZ,OAAO/Y,OAAO,SAAA4Z,GAAC;AAAA,aAAIA,MAAMJ;KAAzB,CAAlB;SACN;AACLA,eAAW;MACTrS;MACA0S,UAAUpE;MACV6D,OAAO;;AAETI,eAAQ,CAAIF,QAAJ,EAAA,OAAiBT,MAAjB;;AAGVS,WAASF;AAETI,WAASrV,SAASoO,KAAKqH,IAAIJ,SAASrV,QAAQ,EAA1B;AAElB,MAAI;AAAA,QAAA;AACF,KAAA,WAAAkK,WAAM,OAAN,SAAA,SAAQuK,aAAaiB,QAAQpB,kBAAkBK,KAAKgB,UAAUN,QAAf,CAA/C;WAEA,UAAM;;AAGT;SCzDeO,iBACdxW,UAAAA;AAEA,SAAOA,SAASA,aAAaf,WAAWI;AACzC;AAED,SAAgBoX,cAAc9T,OAAAA;AAC5B,SAAOA,MAAMsC,WAAW+H;AACzB;SCTe0J,yBAAAA;AACd,MAAA,wBAA8ClJ,6BAA4B,GAAnEmJ,kBAAP,sBAAA,CAAA,GAAwBC,qBAAxB,sBAAA,CAAA;AACA,MAAA,wBAA8CnJ,wBAAuB,GAA9DoJ,kBAAP,sBAAA,CAAA,GAAwBC,qBAAxB,sBAAA,CAAA;AAEA,MAAMC,0BAAsBC,0BAAY,WAAA;AACtC,QAAIL,iBAAiB;AACnBC,yBAAmB,IAAD;;AAGpB,QAAIC,iBAAiB;AACnBC,yBAAmB,KAAD;;KAEnB,CACDH,iBACAE,iBACAD,oBACAE,kBAJC,CARoC;AAevC,SAAOC;AACR;AAED,SAAgBE,oBAAAA;AACd,MAAA,yBAA0BzJ,6BAA4B,GAA/CmJ,kBAAP,uBAAA,CAAA;AACA,MAAA,yBAA0BlJ,wBAAuB,GAA1CoJ,kBAAP,uBAAA,CAAA;AAEA,SAAO,SAASK,iBAAT;AACL,WAAO,CAAC,CAACP,mBAAmBE;;AAE/B;SChCuBM,wBAAAA;AACtB,MAAMC,sBAAsB/Y,uBAAsB;AAClD,MAAA,wBAAoCmP,6BAA4B,GAAvD6J,0BAAT,sBAAA,CAAA;AAEA,SAAO,SAAST,mBAAmBla,SAA5B;AACL,QAAA,oBAAgBqV,iBAAiBrV,OAAD,GAAzBiG,QAAP,kBAAA,CAAA;AAEA,QAAIA,OAAO;AACTyU,0BAAoB1a,OAAD;AACnB2a,8BAAwB1U,KAAD;;;AAG5B;SCmBe2U,qBACd3Z,SAAAA;AAEA,MAAM4Z,wBAAoBlP,qBAAM;AAChC,MAAMuO,qBAAqBO,sBAAqB;AAChD,MAAMlL,mBAAmBiB,oBAAmB;AAC5C,MAAA,wBAAoCM,6BAA4B,GAAvD6J,0BAAT,sBAAA,CAAA;AACA,MAAMN,sBAAsBL,uBAAsB;AAClD,MAAA,wBAAyBrJ,uBAAsB,GAAxCZ,iBAAP,sBAAA,CAAA;AACA,MAAMnE,eAAeW,sBAAqB;AAC1C,MAAA,sBAA4ByE,mBAAkB,GAArCG,kBAAT,oBAAA,CAAA;AACA,MAAMrH,cAAcoD,qBAAoB;AACxC,MAAM4N,mBAAmB3O,oBAAmB;AAE5C,MAAM4O,cAAUha,0BACd,SAASga,SAAQC,OAAjB;AACE,QAAIzL,iBAAiB1N,SAAS;AAC5B;;AAGFwY,wBAAmB;AAEnB,QAAA,kBAAyBY,eAAeD,KAAD,GAAhC/U,QAAP,gBAAA,CAAA,GAAce,UAAd,gBAAA,CAAA;AAEA,QAAI,CAACf,SAAS,CAACe,SAAS;AACtB;;AAGF,QAAMkU,gBACJzS,2BAA2BzB,OAAD,KAAa+I;AAEzCoB,oBAAe;AACfiI,iBAAanT,OAAOiV,aAAR;AACZtP,iBACEuP,iBAAiBlV,OAAOiV,eAAeJ,kBAAkBhR,WAAzC,GAChBkR,KAFU;KAKd,CACEjL,gBACAsK,qBACA9K,kBACA3D,cACAuF,iBACArH,aACAgR,gBAPF,CAxBc;AAmChB,MAAMM,kBAAcra,0BAClB,SAASqa,aAAYJ,OAArB;;AACE,QAAIH,kBAAkBhZ,SAAS;AAC7BsM,mBAAa0M,kBAAkBhZ,OAAnB;;AAGd,QAAA,mBAAgBoZ,eAAeD,KAAD,GAAvB/U,QAAP,iBAAA,CAAA;AAEA,QAAI,CAACA,SAAS,CAACkB,mBAAmBlB,KAAD,GAAS;AACxC;;AAGF4U,sBAAkBhZ,WAAlB,UAA4BuM,WAA5B,OAAA,SAA4B,QAAQtI,WAAW,WAAA;AAC7CyJ,uBAAiB1N,UAAU;AAC3BgZ,wBAAkBhZ,UAAUyO;AAC5B+J,0BAAmB;AACnBH,yBAAmBc,MAAMpZ,MAAP;AAClB+Y,8BAAwB1U,KAAD;OACtB,GANyB;KAQ9B,CACEsJ,kBACA8K,qBACAH,oBACAS,uBAJF,CApBkB;AA2BpB,MAAMU,gBAAYta,0BAChB,SAASsa,aAAT;AACE,QAAIR,kBAAkBhZ,SAAS;AAC7BsM,mBAAa0M,kBAAkBhZ,OAAnB;AACZgZ,wBAAkBhZ,UAAUyO;eACnBf,iBAAiB1N,SAAS;AAOnC5B,4BAAsB,WAAA;AACpBsP,yBAAiB1N,UAAU;OADR;;KAKzB,CAAC0N,gBAAD,CAjBgB;AAoBlBzD,8BAAU,WAAA;AACR,QAAI,CAAC7K,QAAQY,SAAS;AACpB;;AAEF,QAAM+P,UAAU3Q,QAAQY;AACxB+P,YAAQC,iBAAiB,SAASkJ,SAAS;MACzChJ,SAAS;KADX;AAIAH,YAAQC,iBAAiB,aAAauJ,aAAa;MACjDrJ,SAAS;KADX;AAGAH,YAAQC,iBAAiB,WAAWwJ,WAAW;MAC7CtJ,SAAS;KADX;AAIA,WAAO,WAAA;AACLH,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,SAAS+I,OAAtC;AACAnJ,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,aAAaoJ,WAA1C;AACAxJ,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,WAAWqJ,SAAxC;;KAED,CAACpa,SAAS8Z,SAASK,aAAaC,SAAhC,CArBM;AAsBV;AAED,SAASJ,eAAeD,OAAxB;AACE,MAAMpZ,SAASoZ,SAAH,OAAA,SAAGA,MAAOpZ;AACtB,MAAI,CAAC6T,eAAe7T,MAAD,GAAU;AAC3B,WAAO,CAAA;;AAGT,SAAOyT,iBAAiBzT,MAAD;AACxB;AAED,SAASuZ,iBACPlV,OACA8J,gBACA+K,kBACAhR,aAJF;AAME,MAAMzB,QAAQjC,WAAWH,KAAD;AAExB,MAAI8T,cAAc9T,KAAD,GAAS;AACxB,QAAMe,WAAUN,aAAaT,KAAD;AAC5B,WAAO;MACL8J;MACA9J,OAAOe;MACPsU,aAHK,SAAA,cAAA;AAIH,eAAOrV,MAAMsC;;MAEfgT,UAAUtV,MAAMsC;MAChBiT,UAAU;MACVnT;MACArB,SAAAA;MACAD,wBAAwBC;;;AAG5B,MAAMA,UAAUN,aAAaT,OAAO8J,cAAR;AAE5B,SAAO;IACLA;IACA9J,OAAOkS,iBAAiBnR,OAAD;IACvBsU,aAHK,SAAA,YAGO3W,YAHP;UAGOA,eAAAA,QAAAA;AAAAA,qBAAyBmW,oBAAAA,OAAAA,mBAAoB1Y,WAAW2C;;AAClE,aAAO+E,YAAY9C,SAASrC,UAAV;;IAEpB4W,UAAUzR,YAAY9C,SAAS8T,oBAAV,OAAUA,mBAAoB1Y,WAAW2C,KAAzC;IACrByW,UAAU;IACVnT;IACArB;IACAD,wBAAwBL,aAAaT,KAAD;;AAEvC;SCnMewV,YAAYxa,SAAAA;AAC1B,MAAMoZ,sBAAsBL,uBAAsB;AAElDlO,8BAAU,WAAA;AACR,QAAM8F,UAAU3Q,QAAQY;AACxB,QAAI,CAAC+P,SAAS;AACZ;;AAGFA,YAAQC,iBAAiB,UAAU6J,UAAU;MAC3C3J,SAAS;KADX;AAIA,aAAS2J,WAAT;AACErB,0BAAmB;;AAGrB,WAAO,WAAA;AACLzI,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,UAAU0J,QAAvC;;KAED,CAACza,SAASoZ,mBAAV,CAjBM;AAkBV;SCZesB,SAASlF,MAAuB1D,KAAAA;MAAAA,QAAAA,QAAAA;AAAAA,UAAc;;AAC5D,MAAM6I,WAAWpF,gBAAgBC,IAAD;AAEhC,MAAI,CAACmF,UAAU;AACb;;AAGF3b,wBAAsB,WAAA;AACpB2b,aAAShF,YAAY7D,MAAM;GADR;AAGtB;AAED,SAAgB8I,SAASpF,MAAuBqF,IAAAA;AAC9C,MAAMF,WAAWpF,gBAAgBC,IAAD;AAEhC,MAAI,CAACmF,UAAU;AACb;;AAGF3b,wBAAsB,WAAA;AACpB2b,aAAShF,YAAYgF,SAAShF,YAAYkF;GADvB;AAGtB;AAED,SAAgBC,cAAAA;AACd,MAAM9a,UAAUa,WAAU;AAE1B,aAAOwY,0BACL,SAACvH,KAAD;AACE9S,0BAAsB,WAAA;AACpB,UAAIgB,QAAQY,SAAS;AACnBZ,gBAAQY,QAAQ+U,YAAY7D;;KAFX;KAMvB,CAAC9R,OAAD,CARgB;AAUnB;AAED,SAAgB+a,sBAAsB/V,OAAAA;AACpC,MAAI,CAACA,SAAS,CAACqQ,mBAAmBrQ,KAAD,GAAS;AACxC;;AAGF,MAAIA,MAAMmP,QAAQzW,YAAYD,WAAWub,eAAZ,CAAzB,GAAwD;AAC1D;;AAGF,MAAMvD,aAAaC,kBAAkB1Q,KAAD;AACpC,MAAM6V,KAAKvF,2BAA2BtQ,KAAD;AACrC4V,WAASnF,YAAY,EAAET,oBAAoBF,gBAAgB9P,KAAD,CAAhB,IAA2B6V,GAA7D;AACT;SCzDeG,sBAAAA;AACd,MAAM/a,iBAAiBa,kBAAiB;AAExC,aAAOuY,0BAAY,WAAA;AACjBva,iBAAamB,eAAeW,OAAhB;KACX,CAACX,cAAD,CAFe;AAGnB;AAED,SAAgBgb,yBAAAA;AACd,MAAM/a,oBAAoBa,qBAAoB;AAE9C,aAAOsY,0BAAY,WAAA;AACjB,QAAI,CAACnZ,kBAAkBU,SAAS;AAC9B;;AAGFpB,2BAAuBU,kBAAkBU,OAAnB;KACrB,CAACV,iBAAD,CANe;AAOnB;AAED,SAAgBgb,6BAAAA;AACd,MAAM/a,wBAAwBa,yBAAwB;AAEtD,aAAOqY,0BAAY,WAAA;AACjB,QAAI,CAAClZ,sBAAsBS,SAAS;AAClC;;AAGFpB,2BAAuBW,sBAAsBS,OAAvB;KACrB,CAACT,qBAAD,CANe;AAOnB;ACvBD,SAASgb,kBAAT;AACE,MAAM9M,YAAYiB,aAAY;AAE9B,SAAO,SAAS8L,UACdC,QADK;AAGL,QAAI,OAAOA,WAAW,YAAY;AAChC,aAAOD,UAAUC,OAAOhN,UAAUzN,OAAX,CAAP;;AAGlByN,cAAUzN,UAAUya;;AAEvB;AAED,SAAgBC,iBAAAA;AACd,MAAMC,cAAcC,eAAc;AAClC,MAAMvb,iBAAiBa,kBAAiB;AACxC,MAAM2a,mBAAmBT,oBAAmB;AAE5C,SAAO,SAASU,cAAT;AACL,QAAIzb,eAAeW,SAAS;AAC1BX,qBAAeW,QAAQjC,QAAQ;;AAGjC4c,gBAAY,EAAD;AACXE,qBAAgB;;AAEnB;AAED,SAAgBE,kBAAAA;AACd,MAAM1b,iBAAiBa,kBAAiB;AACxC,MAAMya,cAAcC,eAAc;AAElC,SAAO,SAASI,aAAaC,KAAtB;AACL,QAAI5b,eAAeW,SAAS;AAC1BX,qBAAeW,QAAQjC,QAAvB,KAAkCsB,eAAeW,QAAQjC,QAAQkd;AACjEN,kBAAYO,wBAAwB7b,eAAeW,QAAQjC,KAAxB,CAAxB;WACN;AACL4c,kBAAYO,wBAAwBD,GAAD,CAAxB;;;AAGhB;AAED,SAAgBE,YAAAA;AACd,MAAM9b,iBAAiBa,kBAAiB;AACxC,MAAMuN,YAAYiB,aAAY;AAC9B,MAAM0M,eAAeb,gBAAe;AACpC,MAAMI,cAAcC,eAAc;AAElC,MAAA,sBAAqB/L,mBAAkB,GAAhCb,aAAP,oBAAA,CAAA;AACA,MAAMqN,sBAAsBC,uBAAuB7N,UAAUzN,SAASgO,UAApB;AAElD,SAAO;IACLuN;IACAvN;IACA3O;IACAgc;;AAGF,WAASE,SAASC,YAAlB;AACE,QAAMxd,SAASyP,UAAUzN;AAEzB,QAAMyb,YAAYD,WAAW/W,YAAX;AAElB,QAAIzG,UAAM,QAANA,OAASyd,SAAH,KAAiBA,UAAUpZ,UAAU,GAAG;AAChD,aAAOsY,YAAYc,SAAD;;AAGpB,QAAMC,eAAeC,iBAAiBF,WAAWzd,MAAZ;AAErC,QAAI,CAAC0d,cAAc;AAGjB,aAAOf,YAAYc,SAAD;;AAGpBL,iBAAa,SAACpb,SAAD;AAAA,UAAA;AAAA,aACXrC,OAAO6E,OAAOxC,UAAd,iBAAA,CAAA,GAAA,eACGyb,SADH,IACeG,2BAA2BF,cAAcD,SAAf,GADzC,eAAA;KADU;AAKZd,gBAAYc,SAAD;;AAEd;AAED,SAASb,iBAAT;AACE,MAAA,uBAA0B/L,mBAAkB,GAAnCgN,gBAAT,qBAAA,CAAA;AACA,MAAM5c,gBAAgBW,iBAAgB;AAEtC,SAAO,SAAS+a,YAAY3M,YAArB;AACL5P,0BAAsB,WAAA;AACpByd,oBAAc7N,aAAaA,cAAH,OAAA,SAAGA,WAAYvJ,YAAZ,IAA4BuJ,UAA1C,EAAsD8N,KACjE,WAAA;AACEhC,iBAAS7a,cAAce,SAAS,CAAxB;OAFZ;KADmB;;AAQxB;AAED,SAAS4b,2BACPnW,SACAsW,SAFF;AAIE,MAAMC,WAAuB,CAAA;AAE7B,WAAW7W,WAAWM,SAAQ;AAC5B,QAAMrB,QAAQqB,QAAON,OAAD;AAEpB,QAAI8W,SAAS7X,OAAO2X,OAAR,GAAkB;AAC5BC,eAAS7W,OAAD,IAAYf;;;AAIxB,SAAO4X;AACR;AAED,SAASC,SAAS7X,OAAkB2X,SAApC;AACE,SAAOxX,WAAWH,KAAD,EAAQ8X,KAAK,SAAC1a,MAAD;AAAA,WAAUA,KAAKuE,SAASgW,OAAd;GAAjC;AACR;AAED,SAAgBI,qBAAAA;AACd,MAAA,gBAA4BzN,aAAY,GAAvB1Q,SAAjB,cAAQgC;AACR,MAAA,uBAAqB6O,mBAAkB,GAAhCb,aAAP,qBAAA,CAAA;AAEA,SAAO,SAAC7I,SAAD;AAAA,WAAaiX,4BAA4BjX,SAASnH,QAAQgQ,UAAlB;;AAChD;AAED,SAASoO,4BACPjX,SACAnH,QACAgQ,YAHF;;AAKE,MAAI,CAAChQ,UAAU,CAACgQ,YAAY;AAC1B,WAAO;;AAGT,SAAO,GAAA,qBAAChQ,OAAOgQ,UAAD,MAAP,QAAC,mBAAqB7I,OAArB;AACT;AAID,SAASwW,iBACPI,SACAM,MAFF;AAIE,MAAI,CAACA,MAAM;AACT,WAAO;;AAGT,MAAIA,KAAKN,OAAD,GAAW;AACjB,WAAOM,KAAKN,OAAD;;AAGb,MAAMO,qBAAqB3e,OAAO4e,KAAKF,IAAZ,EACxBlF,KAAK,SAACC,GAAGC,GAAJ;AAAA,WAAUA,EAAEhV,SAAS+U,EAAE/U;GADJ,EAExBwD,KAAK,SAAC/H,KAAD;AAAA,WAASie,QAAQhW,SAASjI,GAAjB;GAFU;AAI3B,MAAIwe,oBAAoB;AACtB,WAAOD,KAAKC,kBAAD;;AAGb,SAAO;AACR;AAED,SAAgBpB,wBAAwBD,KAAAA;AACtC,MAAI,CAACA,OAAO,OAAOA,QAAQ,UAAU;AACnC,WAAO;;AAGT,SAAOA,IAAIuB,KAAJ,EAAW/X,YAAX;AACR;AAED,SAAS6W,uBAAuBmB,aAA0BzO,YAA1D;;AACE,MAAI,EAACyO,eAAD,QAACA,YAAczO,UAAH;AAAgB,WAAO;AAEvC,MAAMxC,uBAAqB,kBAAA7N,OAAOC,QAAQ6e,eAAf,OAAA,SAAeA,YAAczO,UAAH,CAA1B,MAAA,OAAA,SAAA,gBAA2C3L,WAAU;AAChF,SAAOkJ,uBAAuBC,kBAAD;AAC9B;SC5LekR,mBAAAA;AACd,MAAA,wBAAiC3N,+BAA8B,GAAxD4N,yBAAP,sBAAA,CAAA;AACA,MAAMC,kBAAkBT,mBAAkB;AAE1C,SAAO,SAAC/X,OAAD;AACL,QAAMe,UAAUN,aAAaT,KAAD;AAE5B,QAAMyY,eAAeF,uBAAuBlQ,IAAItH,OAA3B;AACrB,QAAM2X,cAAcF,gBAAgBzX,OAAD;AAEnC,WAAO;MACL0X;MACAC;MACA1J,QAAQyJ,gBAAgBC;;;AAG7B;ACtBD,SAAS,YAAY,KAAK,KAAK;AAC7B,MAAK,QAAQ;AAAS,UAAM,CAAA;AAC5B,MAAI,WAAW,IAAI;AAEnB,MAAI,CAAC,OAAO,OAAO,aAAa,aAAa;AAAE;EAAO;AAEtD,MAAI,OAAO,SAAS,QAAQ,SAAS,qBAAqB,MAAM,EAAE,CAAC;AACnE,MAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,QAAM,OAAO;AAEb,MAAI,aAAa,OAAO;AACtB,QAAI,KAAK,YAAY;AACnB,WAAK,aAAa,OAAO,KAAK,UAAU;IAC9C,OAAW;AACL,WAAK,YAAY,KAAK;IAC5B;EACA,OAAS;AACL,SAAK,YAAY,KAAK;EAC1B;AAEE,MAAI,MAAM,YAAY;AACpB,UAAM,WAAW,UAAU;EAC/B,OAAS;AACL,UAAM,YAAY,SAAS,eAAe,GAAG,CAAC;EAClD;AACA;;;SCbgBC,OAAOC,OAAAA;AACrB,aACE9d,4BAAA,UAAA,OAAA,OAAA;IACE+d,MAAK;KACDD,OAAAA;IACJE,WAAW/f,KAAK,WAAW6f,MAAME,SAAlB;MAEdF,MAAMhe,QALT;AAQH;SCNeme,qBAAAA,MAAAA;;MACd5Y,cAAAA,KAAAA,YACAY,UAAAA,KAAAA,SACAiO,SAAAA,KAAAA,QACAgK,iBAAAA,KAAAA,2CACAC,gBAAAA,iBAAAA,wBAAAA,SAAiB,OAAA,qBACjBC,gBAAAA,KAAAA,eACAte,WAAAA,KAAAA;AAEA,aACEE,4BAAC6d,QAAD;IACEG,WAAW/f,KAAKN,WAAWuH,QAAZ,QAAA,CAAA,GAAA,MACZvH,WAAWuW,MADC,IACQA,QADR,MAEZvW,WAAWugB,cAFC,IAEgBA,gBAFhB,MAGZvgB,WAAWsW,OAHC,IAGS,CAACC,UAAU,CAACgK,gBAHrB,MAIZvgB,WAAWyI,kBAJC,IAIoBgY,iBAAiBD,gBAJrC,MAAA;oBAMDlY;kBACFZ,YAAW,CAAD;sBACNA;KAEfvF,QAXH;AAcH;SCnCeue,SAAAA,MAAAA;MACdtY,aAAAA,KAAAA,WACAuY,QAAAA,KAAAA,4BACAC,UAAAA,WAAAA,kBAAAA,SAAW,QAAA,eACX/W,SAAAA,KAAAA,QACAgX,UAAAA,KAAAA;AASA,aACExe,4BAAA,OAAA;IACEye,KAAKjX;IACLkX,KAAK3Y;IACLiY,WAAW/f,KAAKN,WAAWghB,UAAU,eAAtB;IACfC,SAASL,WAAW,SAAS;IAC7BC;IACAF;GANF;AASH;SCxBeO,YAAAA,MAAAA;MACd5Y,UAAAA,KAAAA,SACAqY,QAAAA,KAAAA;AAKA,aACEte,4BAAA,QAAA;IACEge,WAAW/f,KAAKN,WAAWghB,UAAU,kBAAtB;oBACD1Y;IACdqY;KAEClH,iBAAiBnR,OAAD,CALnB;AAQH;SCNe6Y,cAAAA,MAAAA;MACd5Z,QAAAA,KAAAA,OACAe,UAAAA,KAAAA,SACArC,aAAAA,KAAAA,YACAmb,OAAAA,KAAAA,MACAR,WAAAA,KAAAA,kCACAxV,aAAAA,cAAAA,qBAAAA,SAAcvC,oBAAAA;AAEd,MAAA,wBAAsCqJ,+BAA8B,GAA3DmP,4BAAT,sBAAA,CAAA;AAEA,MAAMV,QAAQ,CAAA;AACd,MAAIS,MAAM;AACRT,UAAM3U,QAAQ2U,MAAMtV,SAASsV,MAAMW,WAAcF,OAApB;;AAG/B,MAAMG,gBAAgBha,QAAQA,QAAQ4B,eAAeb,OAAD;AAEpD,MAAI,CAACiZ,eAAe;AAClB,WAAO;;AAGT,MAAIlG,cAAckG,aAAD,GAAiB;AAChC,eACElf,4BAACqe,UAAD;MACEC;MACAvY,WAAWE;MACXrC,YAAYvC,WAAW8d;MACvBZ;MACA/W,QAAQ0X,cAAc1X;MACtBgX;KANF;;AAWJ,aACExe,4BAAA,uBAAA,MACG4D,eAAevC,WAAW8d,aACzBnf,4BAAC6e,aAAD;IAAa5Y;IAAkBqY;GAA/B,QAEAte,4BAACqe,UAAD;IACEC;IACAvY,WAAWA,UAAUmZ,aAAD;IACpBtb;IACA2a;IACA/W,QAAQuB,YAAY9C,SAASrC,UAAV;IACnB4a;GANF,CAJJ;AAgBF,WAASA,UAAT;AACEQ,8BAA0B,SAAA3f,MAAI;AAAA,aAAI,IAAIqK,IAAIrK,IAAR,EAAc+f,IAAInZ,OAAlB;KAAT;;AAE5B;SClDeoZ,eAAAA,MAAAA;MACdna,QAAAA,KAAAA,OACAe,UAAAA,KAAAA,SACAiO,SAAAA,KAAAA,QACAgK,iBAAAA,KAAAA,gBACAta,aAAAA,KAAAA,uCACAua,gBAAAA,iBAAAA,wBAAAA,SAAiB,OAAA,qBACjBY,OAAAA,KAAAA,MACAR,WAAAA,KAAAA,UACAxV,cAAAA,KAAAA;AAEA,MAAMqV,gBAAgBhY,mBAAmBlB,KAAD;AAExC,aACElF,4BAACie,sBAAD;IACEG;IACAD;IACAjK;IACAgK;IACA7Y,YAAYA,WAAWH,KAAD;IACtBe;SAEAjG,4BAAC8e,eAAD;IACE7Y;IACAf;IACA6Z;IACAnb;IACA2a;IACAxV;GANF,CARF;AAkBH;;;SClCeuW,cAAAA,MAAAA;;MACdC,iBAAAA,KAAAA,gBACAzf,WAAAA,KAAAA,UACAoU,SAAAA,KAAAA,QACAgK,iBAAAA,KAAAA;AAEA,MAAM3b,WAAWI,2BAA2B4c,cAAD;AAC3C,MAAMC,eAAe5c,+BAA+B2c,cAAD;AAEnD,aACEvf,4BAAA,MAAA;IACEge,WAAW/f,KAAKN,WAAW4E,WAAZ,QAAA,CAAA,GAAA,MACZ5E,WAAWuW,MADC,IACQA,QADR,MAEZvW,WAAWugB,cAFC,IAEgBA,gBAFhB,MAAA;iBAIJ3b;kBACCid;SAEZxf,4BAAA,MAAA;IAAIge,WAAWrgB,WAAW8hB;KAAQD,YAAlC,OACAxf,4BAAA,OAAA;IAAKge,WAAWrgB,WAAW2X;KAAkBxV,QAA7C,CATF;AAYH;SCpBe4f,UAAAA,MAAAA;MAAYH,iBAAAA,KAAAA;AAC1B,MAAA,sBAA2BtP,mBAAkB,GAAtCC,mBAAP,oBAAA,CAAA;AACA,MAAMyP,4BAA4BhU,6BAA4B;AAC9D,MAAM5C,cAAcoD,qBAAoB;AACxC,MAAMyT,gBAAY5f;IAChB,WAAA;AAAA,UAAA;AAAA,cAAA,gBAAM0X,aAAaiI,yBAAD,MAAlB,OAAA,gBAAiD,CAAA;;;IAEjD,CAACzP,kBAAkByP,yBAAnB;EAHgB;AAKlB,MAAM/b,aAAawH,oBAAmB;AAEtC,aACEpL,4BAACsf,eAAD;IACEC;IACArB,gBAAc;IACdhK,QAAQ0L,UAAUzc,WAAW;KAE5Byc,UAAU9hB,IAAI,SAAC+hB,eAAD;AACb,QAAM3a,QAAQ4B,eAAe+Y,cAAclH,QAAf;AAE5B,QAAI,CAACzT,OAAO;AACV,aAAO;;AAGT,eACElF,4BAACqf,gBAAD;MACElB,gBAAgB;MAChBlY,SAAS4Z,cAAc5Z;MACvBrC;MACAsB;MACAtG,KAAKihB,cAAc5Z;MACnB8C;KANF;GARH,CALH;AAyBH;;;SC3Be+W,YAAAA;AACd,MAAMvX,aAAa+C,oBAAmB;AACtC,MAAMyU,gCAA4B/f,qBAAa,CAAb;AAElC,aACEA,4BAAA,MAAA;IAAIge,WAAWrgB,WAAWqiB;KACvBzX,WAAWzK,IAAI,SAAAyhB,gBAAc;AAC5B,QAAMhd,WAAWI,2BAA2B4c,cAAD;AAE3C,QAAIhd,aAAaf,WAAWG,WAAW;AACrC,iBAAO3B,4BAAC0f,WAAD;QAAW9gB,KAAK2D;QAAUgd;OAA1B;;AAGT,eACEvf,4BAACigB,gBAAD;MACErhB,KAAK2D;MACLA;MACAgd;MACAQ;KAJF;GARH,CADH;AAmBH;AAED,SAASE,eAAT,MAAA;MACE1d,WAAAA,KAAAA,UACAgd,iBAAAA,KAAAA,gBACAQ,4BAAAA,KAAAA;AAMA,MAAMG,gBAAgB1C,iBAAgB;AACtC,MAAMvU,iBAAiB2C,wBAAuB;AAC9C,MAAMhI,aAAawH,oBAAmB;AACtC,MAAMgE,oBAAoBU,qBAAoB;AAC9C,MAAA,wBAAyBF,uBAAsB,GAAxCZ,iBAAP,sBAAA,CAAA;AACA,MAAMd,oBAAoBF,qBAAoB;AAC9C,MAAMjF,cAAcoD,qBAAoB;AACxC,MAAMgS,iBAAiB,CAAChT,2BAA0B;AAIlD,MAAMgV,eACJ,CAAC/Q,qBAAqB2Q,0BAA0Bjf,UAAU,IACtD,CAAA,IACAwF,iBAAiB/D,QAAD;AAEtB,MAAI4d,aAAahd,SAAS,GAAG;AAC3B4c,8BAA0Bjf;;AAG5B,MAAIsf,gBAAgB;AAEpB,MAAM7Z,UAAS4Z,aAAariB,IAAI,SAAAoH,OAAK;AACnC,QAAMe,UAAUN,aAAaT,OAAO8J,cAAR;AAC5B,QAAA,iBAA8CkR,cAAchb,KAAD,GAAnDyY,eAAR,eAAQA,cAAcC,cAAtB,eAAsBA,aAAa1J,SAAnC,eAAmCA;AAEnC,QAAMmM,eAAenS,kBAAkBhJ,KAAD;AAEtC,QAAIgP,UAAUmM,cAAc;AAC1BD;;AAGF,QAAIC,cAAc;AAChB,aAAO;;AAGT,eACErgB,4BAACqf,gBAAD;MACElB;MACAvf,KAAKqH;MACLf;MACAe;MACAiO,QAAQyJ;MACRO,gBAAgBN;MAChBha;MACA2a,UAAUtV;MACVF;KATF;GAfW;AA6Bf,aACE/I,4BAACsf,eAAD;IACEC;;;IAGArL,QAAQkM,kBAAkB7Z,QAAOpD;KAEhCoD,OANH;AASH;SCrGe+Z,uBAAuBnP,QAAAA;AACrC,MAAMjM,QAAQ8R,kBAAkB7F,MAAD;AAC/BnS,eAAakG,KAAD;AACZ+V,wBAAsB/V,KAAD;AACtB;AAED,SAAgBqb,+BAA+BpP,QAAAA;AAC7C,MAAMqP,aAAaxJ,kBAAkB7F,MAAD;AAEpCnS,eAAawhB,UAAD;AACZA,gBAAU,OAAV,SAAAA,WAAYC,MAAZ;AACD;AAED,SAAgBC,sBAAsBvP,QAAAA;AACpCnS,eAAa4X,iBAAiBzF,MAAD,CAAjB;AACb;AAED,SAAgBwP,sBAAsB1hB,SAAAA;AACpC,MAAI,CAACA,SAAS;AACZ;;AAGF,MAAMO,OAAOuX,iBAAiB9X,OAAD;AAE7B,MAAI,CAACO,MAAM;AACT,WAAO8gB,uBAAuBrJ,aAAahY,OAAD,CAAb;;AAG/BD,eAAaQ,IAAD;AACZyb,wBAAsBzb,IAAD;AACtB;AAED,SAAgBohB,sBAAsB3hB,SAAAA;AACpC,MAAI,CAACA,SAAS;AACZ;;AAGF,MAAMI,OAAOyX,iBAAiB7X,OAAD;AAE7B,MAAI,CAACI,MAAM;AACT,WAAOqhB,sBAAsBxJ,aAAajY,OAAD,CAAb;;AAG9BD,eAAaK,IAAD;AACZ4b,wBAAsB5b,IAAD;AACtB;AAED,SAAgBwhB,0BACd5hB,SACA6hB,QAAAA;AAEA,MAAI,CAAC7hB,SAAS;AACZ;;AAGF,MAAMI,OAAO0hB,qBAAqB9hB,OAAD;AAEjC,MAAI,CAACI,MAAM;AACT,WAAOyhB,OAAM;;AAGf9hB,eAAaK,IAAD;AACZ4b,wBAAsB5b,IAAD;AACtB;AAED,SAAgB2hB,4BAA4B/hB,SAAAA;AAC1C,MAAI,CAACA,SAAS;AACZ;;AAGF,MAAMO,OAAOyhB,uBAAuBhiB,OAAD;AAEnC,SAAOD,aAAaQ,IAAD;AACpB;AAED,SAASuhB,qBAAqB9hB,SAA9B;AACE,MAAI,CAACA,SAAS;AACZ,WAAO;;AAGT,MAAMqW,kBAAkB6B,uBAAuBlY,OAAD;AAC9C,MAAMsD,WAAWyS,gBAAgBM,eAAD;AAChC,MAAMpC,aAAazB,kBAAkB6D,iBAAiBrW,OAAlB;AACpC,MAAMsT,MAAMV,UAAUyD,iBAAiBrW,OAAlB;AACrB,MAAMiiB,aAAahQ,kBAAkBoE,iBAAiBrW,OAAlB;AAEpC,MAAIsT,QAAQ,GAAG;AACb,QAAM4O,sBAAsBjK,aAAa3U,QAAD;AAExC,QAAI,CAAC4e,qBAAqB;AACxB,aAAO;;AAGT,WAAOlO;MACLwD,iBAAiB0K,mBAAD;MAChB;;MACAD;MACAhO;IAJoB;;AAQxB,SAAOK,oBACLkD,iBAAiBnB,eAAD,GAChB/C,KACA2O,YACAhO,UAJwB;AAM3B;AAED,SAAS+N,uBAAuBhiB,SAAhC;AACE,MAAI,CAACA,SAAS;AACZ,WAAO;;AAGT,MAAMqW,kBAAkB6B,uBAAuBlY,OAAD;AAC9C,MAAMsD,WAAWyS,gBAAgBM,eAAD;AAChC,MAAMpC,aAAazB,kBAAkB6D,iBAAiBrW,OAAlB;AACpC,MAAMsT,MAAMV,UAAUyD,iBAAiBrW,OAAlB;AACrB,MAAMiiB,aAAahQ,kBAAkBoE,iBAAiBrW,OAAlB;AACpC,MAAI,CAACkT,WAAWmD,iBAAiBrW,OAAlB,GAA4B;AACzC,QAAMmiB,sBAAsBnK,aAAa1U,QAAD;AAExC,QAAI,CAAC6e,qBAAqB;AACxB,aAAO;;AAGT,WAAOnO,gBACLwD,iBAAiB2K,mBAAD,GAChB,GACAF,YACAhO,UAJoB;;AAQxB,MAAMmO,gBAAgBjO,oBACpBqD,iBAAiBnB,eAAD,GAChB/C,KACA2O,YACAhO,UAJuC;AAOzC,SAAOmO;AACR;;;ACxID,IAAKC;CAAL,SAAKA,YAAAA;AACHA,EAAAA,WAAAA,WAAAA,IAAAA,IAAAA,CAAAA,IAAA;AACAA,EAAAA,WAAAA,WAAAA,MAAAA,IAAAA,CAAAA,IAAA;AACD,GAHIA,cAAAA,YAAS,CAAA,EAAd;AAKA,SAAgBC,uBAAAA;AACd,MAAMthB,mBAAmBU,oBAAmB;AAC5C,MAAML,qBAAqBa,sBAAqB;AAChD,MAAA,wBAAgB4O,6BAA4B,GAArC7K,QAAP,sBAAA,CAAA;AACA,MAAMtB,aAAawH,oBAAmB;AAEtC,MAAA,wBAAqCoW,sBACnClhB,kBADwD,GAAlDmhB,SAAR,sBAAQA,QAAQC,mBAAhB,sBAAgBA;AAGhB,MAAM/H,sBAAsB/Y,uBAAsB;AAClD,MAAM+gB,kBAAkBC,gBAAgBthB,kBAAD;AACvC,MAAMyI,cAAcoD,qBAAoB;AAExC,MAAM4I,SAASZ,iBAAiBlU,iBAAiBa,OAAlB;AAE/B,MAAMmT,UACJ/O,SACA6P,UACA3O,mBAAmBlB,KAAD,KAClB6P,OAAOuB,UAAUC,SAAS5Y,WAAWyI,kBAArC;AAEF2E,8BAAU,WAAA;AACR,QAAI,CAACkJ,SAAS;AACZ;;AAGFqM,2BAAuBhgB,mBAAmBQ,OAApB;KACrB,CAACR,oBAAoB2T,SAAShU,gBAA9B,CANM;AAQT,MAAI+R,KAAK6P;AAET,MAAI,CAAC5N,WAAWhU,iBAAiBa,SAAS;AACxC6Y,wBAAoB,IAAD;SACd;AACL3H,UAAMyP,OAAM;AACZI,mBAAeF,gBAAe;;AAGhC,aACE3hB,4BAAA,OAAA;IACE8hB,KAAKxhB;IACL0d,WAAW/f,KAAKN,WAAWub,iBAAiB;MAC1CjF;MACA,eAAeyN,iBAAgB,MAAOJ,UAAUS;KAFnC;IAIfzD,OAAO;MAAEtM;;KAERiC,WAAW/O,QACR,CAACS,aAAaT,KAAD,CAAb,EACGuT,OAAOhS,gBAAgBvB,KAAD,CADzB,EAEG0N,MAAM,GAAG,CAFZ,EAGG9U,IAAI,SAAAmI,SAAO;AAAA,eACVjG,4BAACqf,gBAAD;MACEzgB,KAAKqH;MACLf;MACAe;MACArC;MACAua,gBAAgB;MAChBpV;KANF;GAJJ,IAaA,UACJ/I,4BAAA,OAAA;IAAKge,WAAU;IAAoBM,OAAOuD;GAA1C,CAvBF;AA0BH;AAED,SAASD,gBAAgBthB,oBAAzB;AACE,MAAML,mBAAmBU,oBAAmB;AAC5C,SAAO,SAASghB,kBAAT;AACL,QAAMrD,QAA6B,CAAA;AACnC,QAAI,CAAChe,mBAAmBQ,SAAS;AAC/B,aAAOwd;;AAGT,QAAIre,iBAAiBa,SAAS;AAC5B,UAAMiU,SAASZ,iBAAiBlU,iBAAiBa,OAAlB;AAE/B,UAAMmV,aAAaH,mBAAmBf,MAAD;AAErC,UAAI,CAACA,QAAQ;AACX,eAAOuJ;;AAITA,YAAM3M,OAAOsE,cAAalB,UAAM,OAAN,SAAAA,OAAQiN,eAAc;;AAGlD,WAAO1D;;AAEV;AAED,SAASkD,sBACPlhB,oBADF;AAGE,MAAML,mBAAmBU,oBAAmB;AAC5C,MAAMT,UAAUa,WAAU;AAC1B,MAAIkhB,YAAYX,UAAUY;AAE1B,SAAO;IACLR;IACAD;;AAGF,WAASC,mBAAT;AACE,WAAOO;;AAGT,WAASR,SAAT;AACEQ,gBAAYX,UAAUY;AACtB,QAAIC,iBAAiB;AAErB,QAAI,CAAC7hB,mBAAmBQ,SAAS;AAC/B,aAAO;;AAGT,QAAMkI,SAAS8I,cAAcxR,mBAAmBQ,OAApB;AAE5B,QAAIb,iBAAiBa,SAAS;AAAA,UAAA;AAC5B,UAAM+P,UAAU3Q,QAAQY;AACxB,UAAMiU,SAASZ,iBAAiBlU,iBAAiBa,OAAlB;AAE/B,UAAMshB,eAAetQ,cAAciD,MAAD;AAElCoN,uBAAiBrN,mBAAmBC,MAAD;AAEnC,UAAMc,aAAS,qBAAGhF,WAAH,OAAA,SAAGA,QAASgF,cAAZ,OAAA,qBAAyB;AAExC,UAAIA,YAAYsM,iBAAiBnZ,QAAQ;AACvCiZ,oBAAYX,UAAUS;AACtBI,0BAAkBC,eAAepZ;;;AAIrC,WAAOmZ,iBAAiBnZ;;AAE3B;;;SC9JeqZ,OAAAA;AACd,MAAMniB,UAAUa,WAAU;AAC1B2Z,cAAYxa,OAAD;AACX2Z,uBAAqB3Z,OAAD;AACpB0Q,iBAAc;AAEd,aACE5Q,4BAAA,OAAA;IAAKge,WAAWrgB,WAAWgY;IAAYmM,KAAK5hB;SAC1CF,4BAACuhB,sBAAD,IAAA,OACAvhB,4BAAC8f,WAAD,IAAA,CAFF;AAKH;SCRewC,sBACdC,OACAC,iBAAAA;AAEA,MAAMtiB,UAAUa,WAAU;AAC1B,MAAM4P,oBAAoBD,qBAAoB;AAC9C,MAAMD,iBAAiBD,kBAAiB;AAExCzF,8BAAU,WAAA;AACR,QAAI,CAACwX,OAAO;AACV;;AAEF,QAAM1R,UAAU3Q,QAAQY;AAExB+P,eAAO,OAAP,SAAAA,QAASC,iBAAiB,WAAW2R,UAAU;MAC7CzR,SAAS;KADX;AAIAH,eAAO,OAAP,SAAAA,QAASC,iBAAiB,aAAa4R,aAAa,IAApD;AAEA7R,eAAO,OAAP,SAAAA,QAASC,iBAAiB,SAAS6R,SAAS,IAA5C;AAEA9R,eAAO,OAAP,SAAAA,QAASC,iBAAiB,YAAY8R,SAAS;MAC7C5R,SAAS;KADX;AAGAH,eAAO,OAAP,SAAAA,QAASC,iBAAiB,QAAQ8R,SAAS,IAA3C;AAEA,aAASD,QAAQE,GAAjB;AACE,UAAM9N,SAASZ,iBAAiB0O,EAAEhiB,MAAH;AAE/B,UAAI,CAACkU,QAAQ;AACX,eAAO6N,QAAO;;AAGhB,UAAM3c,UAAUwO,wBAAwBM,MAAD;AACvC,UAAMR,kBAAkBC,gCAAgCO,MAAD;AAEvD,UAAI,CAAC9O,WAAW,CAACsO,iBAAiB;AAChC,eAAOqO,QAAO;;AAGhBJ,sBAAgB;QACdvc;QACAsO;OAFa;;AAKjB,aAASqO,QAAQC,GAAjB;AACE,UAAIA,GAAG;AACL,YAAMC,gBAAgBD,EAAEC;AAExB,YAAI,CAAC3O,iBAAiB2O,aAAD,GAAiB;AACpC,iBAAON,gBAAgB,IAAD;;;AAI1BA,sBAAgB,IAAD;;AAEjB,aAASC,SAASI,GAAlB;AACE,UAAIA,EAAEjkB,QAAQ,UAAU;AACtB4jB,wBAAgB,IAAD;;;AAInB,aAASE,YAAYG,GAArB;AACE,UAAIlS,kBAAiB,GAAI;AACvB;;AAGF,UAAMoE,SAASZ,iBAAiB0O,EAAEhiB,MAAH;AAE/B,UAAIkU,QAAQ;AACV/V,qBAAa+V,MAAD;;;AAIhB,WAAO,WAAA;AACLlE,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,aAAayR,WAA1C;AACA7R,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,YAAY2R,OAAzC;AACA/R,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,SAAS0R,SAAS,IAA/C;AACA9R,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,QAAQ2R,SAAS,IAA9C;AACA/R,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,WAAWwR,QAAxC;;KAED,CAACviB,SAASqiB,OAAOC,iBAAiB7R,mBAAmBF,cAArD,CA1EM;AA2EV;SCzFesS,wBAAAA;AACd,MAAMC,+BAA+B/W,gCAA+B;AAEpE,SAAO+W,iCAAiCvhB,uBAAuB4H;AAChE;AAED,SAAgB4Z,yBAAAA;AACd,MAAMD,+BAA+B/W,gCAA+B;AAEpE,SAAO+W,iCAAiCvhB,uBAAuBkH;AAChE;;;AChBD,IAAYua;CAAZ,SAAYA,gBAAAA;AACVA,EAAAA,eAAAA,KAAAA,IAAA;AACAA,EAAAA,eAAAA,QAAAA,IAAA;AACD,GAHWA,kBAAAA,gBAAa,CAAA,EAAzB;AAYA,SAAwBC,KAAAA,MAAAA;MACtBrjB,WAAAA,KAAAA,UACAke,YAAAA,KAAAA,6BACAM,OAAAA,QAAAA,eAAAA,SAAQ,CAAA,IAAA,kCACR2D,WAAAA,YAAAA,mBAAAA,SAAYiB,cAAcE,MAAAA;AAE1B,aACEpjB,4BAAA,OAAA;IAAKse,OAAK,SAAA,CAAA,GAAOA,KAAP;IAAgBN,WAAW/f,KAAK,QAAQ+f,WAAWiE,SAApB;KACtCniB,QADH;AAIH;SCnBuBujB,MAAAA,MAAAA;MAAQrF,YAAAA,KAAAA,6BAAWM,OAAAA,QAAAA,eAAAA,SAAQ,CAAA,IAAA;AACjD,aAAOte,4BAAA,OAAA;IAAKse,OAAK,SAAA;MAAIgF,MAAM;OAAMhF,KAAhB;IAAyBN,WAAW/f,KAAK+f,SAAD;GAAlD;AACR;;;SCHuBuF,SAAAA,MAAAA;MAAWzjB,WAAAA,KAAAA,UAAUke,YAAAA,KAAAA,WAAWM,QAAAA,KAAAA;AACtD,aACEte,4BAAA,OAAA;IAAKse,OAAK,SAAA,CAAA,GAAOA,OAAP;MAAckF,UAAU;;IAAcxF;KAC7Cle,QADH;AAIH;SCNuB2jB,SAAAA,MAAAA;MAAW3jB,WAAAA,KAAAA,UAAUke,YAAAA,KAAAA,WAAWM,QAAAA,KAAAA;AACtD,aACEte,4BAAA,OAAA;IAAKse,OAAK,SAAA,CAAA,GAAOA,OAAP;MAAckF,UAAU;;IAAcxF;KAC7Cle,QADH;AAIH;;;ACMD,IAAM4jB,YAAY;AAMlB,SAAgBC,qBAAAA;AACd,aACE3jB,4BAACyjB,UAAD;IAAUnF,OAAO;MAAEtV,QAAQ0a;;SACzB1jB,4BAACujB,UAAD;IAAUjF,OAAO;MAAE3K,QAAQ;MAAGiQ,OAAO;;SACnC5jB,4BAAC6jB,gBAAD;IAAgB5B,WAAW6B,wBAAwBC;GAAnD,CADF,CADF;AAMH;AAED,SAAgBF,eAAAA,MAAAA;;4BACd5B,WAAAA,YAAAA,mBAAAA,SAAY6B,wBAAwBE,aAAAA;AAEpC,MAAM5jB,oBAAoBa,qBAAoB;AAC9C,MAAMgjB,aAAa9Y,2BAA0B;AAC7C,MAAA,wBAA4B6E,wBAAuB,GAA5CkU,SAAP,sBAAA,CAAA,GAAeC,YAAf,sBAAA,CAAA;AACA,MAAA,wBAA4CvU,uBAAsB,GAA3DZ,iBAAP,sBAAA,CAAA,GAAuBoV,oBAAvB,sBAAA,CAAA;AACA,MAAM9K,sBAAsBL,uBAAsB;AAClD,MAAM0C,mBAAmBT,oBAAmB;AAE5C,MAAI+I,YAAY;AACd,WAAO;;AAGT,MAAMI,YAAeX,YAAYzf,mBAAmBd,SAArC;AAEf,MAAMmhB,eAAeJ,SAASG,YAAYX,YAAY;AAEtD,MAAMa,WAAWtC,cAAc6B,wBAAwBC;AAEvD,aACE/jB,4BAACyjB,UAAD;IACEzF,WAAW/f,KAAK,kBAAkBgkB,YAAnB,QAAA,CAAA,GAAA,MACZtkB,WAAW6mB,IADC,IACMN,QADN,MAAA;IAGf5F,OACEiG,WACI;MAAEE,WAAWH;MAActb,QAAQsb;QACnC;MAAEG,WAAWH;;SAGnBtkB,4BAAA,OAAA;IAAKge,WAAU;IAAuB8D,KAAK1hB;KACxC6D,mBAAmBnG,IAAI,SAAC4mB,mBAAmBhM,GAApB;;AACtB,QAAMiM,SAASD,sBAAsB1V;AACrC,eACEhP,4BAAC6d,QAAD;MACES,OAAO;QACLsG,WAAW3mB,KACTsmB,WAAQ,iBACW7L,KAAKwL,SAASR,YAAY,KADrC,QAAA,iBAEWhL,KAAKwL,SAASR,YAAY,KAFrC,OAGRQ,UAAUS,UAAU,YAJP;;MAOjB3K,SAAS,SAAA,UAAA;AACP,YAAIkK,QAAQ;AACVE,4BAAkBM,iBAAD;AACjB/I,2BAAgB;eACX;AACLwI,oBAAU,IAAD;;AAEX7K,4BAAmB;;MAErB1a,KAAK8lB;MACL1G,WAAW/f,KAAI,cAAaymB,mBAAqB,aAAlC,SAAA,CAAA,GAAA,OACZ/mB,WAAWgnB,MADC,IACQA,QADR,OAAA;MAGfE,UAAUX,SAAS,IAAI;sBACTS;mCAEZngB,eAAekgB,iBAAD;KAzBlB;GAHH,CADH,CAVF;AA+CH;AAED,IAAYZ;CAAZ,SAAYA,0BAAAA;AACVA,EAAAA,yBAAAA,UAAAA,IAAA;AACAA,EAAAA,yBAAAA,YAAAA,IAAA;AACD,GAHWA,4BAAAA,0BAAuB,CAAA,EAAnC;SCpFgBgB,UAAAA;AACd,MAAMzc,gBAAgBoD,iBAAgB;AACtC,MAAMsZ,sBAAsB9B,uBAAsB;AAElD,MAAI,CAAC5a,cAAcyB,aAAa;AAC9B,WAAO;;AAGT,aACE9J,4BAACmjB,MAAD;IAAMnF,WAAU;SACdhe,4BAACglB,aAAD,IAAA,OACAhlB,4BAACqjB,OAAD,IAAA,GACC0B,0BAAsB/kB,4BAAC2jB,oBAAD,IAAA,IAAyB,IAHlD;AAMH;AAED,SAAgBqB,cAAAA;;AACd,MAAM3c,gBAAgBoD,iBAAgB;AACtC,MAAA,gBAAwCoB,uBAAuB,IAAf,GAAzCoY,eAAP,UAAA,CAAA,GAAqBzC,kBAArB,UAAA,CAAA;AACA,MAAM5e,aAAawH,oBAAmB;AACtC,MAAA,wBAA+B2E,6BAA4B,GAApDmV,uBAAP,sBAAA,CAAA;AACA,MAAMnc,cAAcoD,qBAAoB;AAExCmW,wBAAsBja,cAAcyB,aAAa0Y,eAA5B;AAErB,MAAMtd,QAAQ4B,gBAAc,wBAC1Bme,gBAD0B,OAAA,SAC1BA,aAAchf,YADY,OAAA,wBACDgf,gBADC,OAAA,SACDA,aAAc1Q,eADb;AAI5B,MAAM4Q,OAAOjgB,SAAS,QAAQ+f,gBAAgB;AAE9C,aAAOjlB,4BAAColB,gBAAD,IAAA;AAEP,WAASA,iBAAT;AACE,QAAMxb,eACJsb,wBADgB,OAChBA,uBAAwBpe,eAAeuB,cAAcuB,YAAf;AACxC,QAAI,CAACA,cAAc;AACjB,aAAO;;AAET,QAAMyb,cAAcH,uBAChBnf,UAAUmf,oBAAD,IACT7c,cAAcwB;AAElB,eACE7J,4BAAA,uBAAA,UACEA,4BAAA,OAAA,MACGmlB,WACCnlB,4BAAC8e,eAAD;MACE7Y,SAASgf,gBAAF,OAAA,SAAEA,aAAchf;MACvBf;MACAtB;MACAmb,MAAM;MACNhW;KALF,IAOEa,mBACF5J,4BAAC8e,eAAD;MACE7Y,SAASN,aAAaiE,YAAD;MACrB1E,OAAO0E;MACPhG;MACAmb,MAAM;MACNhW;KALF,IAOE,IAjBN,GAmBCoc,WACCnlB,4BAAA,OAAA;MAAKge,WAAU;OAA2BjY,UAAUb,KAAD,CAAnD,QAEAlF,4BAAA,OAAA;MAAKge,WAAU;OAA2BqH,WAA1C,CAvBJ;;AA4BL;;;SC/FeC,oBAAoBC,WAAAA;;AAClC,UAAA,wBAAOA,aAAP,OAAA,SAAOA,UAAWC,aAAa,WAAxB,MAAP,OAAA,wBAA+C;AAChD;SCIeC,iCACdC,mBAAAA;AAEA,MAAMxlB,UAAUa,WAAU;AAE1BgK,8BAAU,WAAA;AACR,QAAM4a,oBAAoB,oBAAIC,IAAJ;AAC1B,QAAM/U,UAAU3Q,QAAQY;AACxB,QAAM+kB,WAAW,IAAIC,qBACnB,SAAApnB,SAAO;AACL,UAAI,CAACmS,SAAS;AACZ;;AAGF,eAAA,YAAA,gCAAoBnS,OAApB,GAAA,OAAA,EAAA,QAAA,UAAA,GAAA,QAA6B;AAAA,YAAlBqnB,QAAkB,MAAA;AAC3B,YAAMxe,MAAK+d,oBAAoBS,MAAMllB,MAAP;AAC9B8kB,0BAAkBK,IAAIze,KAAIwe,MAAME,iBAAhC;;AAGF,UAAMC,SAAS3nB,MAAMmY,KAAKiP,iBAAX;AACf,UAAMQ,eAAeD,OAAOA,OAAO/iB,SAAS,CAAjB;AAE3B,UAAIgjB,aAAa,CAAD,KAAO,GAAG;AACxB,eAAOT,kBAAkBS,aAAa,CAAD,CAAb;;AAG1B,eAAA,KAAA,GAAA,UAA0BD,QAA1B,KAAA,QAAA,QAAA,MAAkC;AAA7B,YAAA,aAAA,QAAA,EAAA,GAAO3e,KAAP,WAAA,CAAA,GAAW6e,QAAX,WAAA,CAAA;AACH,YAAIA,OAAO;AACTV,4BAAkBne,EAAD;AACjB;;;OAIN;MACE8e,WAAW,CAAC,GAAG,CAAJ;KA1BE;AA6BjBxV,eAAO,OAAP,SAAAA,QAAS8F,iBAAiB/Y,YAAYD,WAAW4E,QAAZ,CAArC,EAA4D5D,QAAQ,SAAA2nB,IAAE;AACpET,eAASU,QAAQD,EAAjB;KADF;KAGC,CAACpmB,SAASwlB,iBAAV,CAnCM;AAoCV;SC7CuBc,kBAAAA;AACtB,MAAA,sBAAqB7W,mBAAkB,GAAhCb,aAAP,oBAAA,CAAA;AAEA,SAAO,CAAC,CAACA;AACV;SCCe2X,4BAAAA;AACd,MAAMvmB,UAAUa,WAAU;AAC1B,MAAMhB,gBAAgBW,iBAAgB;AAEtC,SAAO,SAASgmB,uBAAuBnkB,UAAhC;;AACL,QAAI,CAACrC,QAAQY,SAAS;AACpB;;AAEF,QAAMykB,aAAS,mBAAGrlB,QAAQY,YAAX,OAAA,SAAG,iBAAiBuU,cAAjB,iBACD9S,WADC,IAAA;AAIlB,QAAI,CAACgjB,WAAW;AACd;;AAGF,QAAMvP,YAAYuP,UAAUvP,aAAa;AAEzC4E,aAAS7a,cAAce,SAASkV,SAAxB;;AAEX;SCzBe2Q,4BAAAA;AACd,MAAMC,uBAAuBrb,sBAAqB;AAElD,MAAI,CAACqb,sBAAsB;AACzB,WAAO;;AAGT,SAAOA,qBAAqBzjB,WAAW;AACxC;SCQe0jB,qBAAAA;AACd,MAAA,gBAA4Cha,uBAAwB,IAAhB,GAA7Cia,iBAAP,UAAA,CAAA,GAAuBpB,oBAAvB,UAAA,CAAA;AACA,MAAMgB,yBAAyBD,0BAAyB;AACxDhB,mCAAiCC,iBAAD;AAChC,MAAMqB,eAAeP,gBAAe;AAEpC,MAAMQ,mBAAmB1b,oBAAmB;AAC5C,MAAMjL,wBAAwBa,yBAAwB;AACtD,MAAM+lB,qBAAqBN,0BAAyB;AAEpD,aACI3mB,4BAAA,OAAA;IACEge,WAAU;IACVkJ,MAAK;kBACM;IACX3f,IAAG;IACHua,KAAKzhB;KAEN2mB,iBAAiBlpB,IAAI,SAAAyhB,gBAAc;;AAClC,QAAMhd,WAAWI,2BAA2B4c,cAAD;AAC3C,QAAM4H,mBAAmB5kB,aAAaukB;AAEtC,QAAI/N,iBAAiBwG,cAAD,KAAoB0H,oBAAoB;AAC1D,aAAO;;AAGT,eACEjnB,4BAAC6d,QAAD;MACEgH,UAAWkC,gBAAgBI,mBAAoB,KAAK;MACpDnJ,WAAW/f,KAAK,eAAD,aAA2BsE,WAA3B,QAAA,CAAA,GAAA,MACZ5E,WAAWgnB,MADC,IACQwC,kBADR,MAAA;MAGfvoB,KAAK2D;MACLyX,SAAS,SAAA,UAAA;AACP0L,0BAAkBnjB,QAAD;AACjBmkB,+BAAuBnkB,QAAD;;oBAEZK,+BAA+B2c,cAAD;uBAC3B4H;MACfD,MAAK;uBACS;KAbhB;GATH,CAPD;AAmCL;;;;;AC3DD,IAAME,QAAWxpB,YAAYD,WAAW0pB,WAAZ,IAAjB,MAA6CzpB,YACtDD,WAAWqiB,SADsD;AAInE,IAAMsH,eAAe,CAAC,UAAU1pB,YAAYD,WAAWuH,KAAZ,CAAtB,EAA0ClH,KAAK,EAA/C;AACrB,IAAMupB,WAAW3pB,YAAYD,WAAW4E,QAAZ;AAE5B,SAAgBilB,UAAAA,MAAAA;MAAY3oB,QAAAA,KAAAA;AAC1B,MAAI,CAACA,OAAO;AACV,WAAO;;AAGT,MAAM4oB,IAAIC,SAAS7oB,KAAD;AAElB,aACEmB,4BAAA,SAAA,MAAA,WACEonB,QADF,MACWE,eADX,8CAMEF,QANF,MAMWK,IANX,4CAUEL,QAVF,MAUWG,WAVX,eAUgCE,IAVhC,uCAAA;AAeH;AAED,SAASC,SAAS7oB,OAAlB;AACE,SAAO,CACLyoB,cACA,sBACAtL,wBAAwBnd,KAAD,GACvB,IAJK,EAKLb,KAAK,EALA;AAMR;SCvBe2pB,kBAAAA;AACd,MAAMjf,iBAAiBsD,wBAAuB;AAE9C,MAAM4b,qBAAqB7E,sBAAqB;AAEhD,MAAIra,gBAAgB;AAClB,WAAO;;AAGT,aACE1I,4BAACmjB,MAAD;IAAMnF,WAAU;SACdhe,4BAAC6nB,QAAD,IAAA,GAECD,yBAAqB5nB,4BAAC6jB,gBAAD,IAAA,IAAqB,IAH7C;AAMH;AAED,SAAgBgE,SAAAA;AACd,MAAA,gBAAsBhb,uBAAS,CAAD,GAAvBib,MAAP,UAAA,CAAA,GAAYC,SAAZ,UAAA,CAAA;AACA,MAAMzO,sBAAsBL,uBAAsB;AAClD,MAAM9Y,iBAAiBa,kBAAiB;AACxC,MAAM4a,cAAcJ,eAAc;AAClC,MAAMwM,cAAchd,2BAA0B;AAC9C,MAAMid,YAAY5c,yBAAwB;AAC1C,MAAA,aAAsD4Q,UAAS,GAAvDE,sBAAR,WAAQA,qBAAqBrN,aAA7B,WAA6BA,YAAYuN,YAAzC,WAAyCA;AAEzC,MAAM6L,QAAQ/nB,kBAAH,OAAA,SAAGA,eAAgBW;AAC9B,MAAMjC,QAAQqpB,SAAH,OAAA,SAAGA,MAAOrpB;AAErB,aACEmB,4BAACyjB,UAAD;IAAUzF,WAAU;SAClBhe,4BAACwnB,WAAD;IAAW3oB;GAAX,OACAmB,4BAAA,SAAA;;IAEEioB;kBACY;IACZE,SAAS7O;IACT0E,WAAU;IACVD,MAAK;qBACS;IACdiK;IACA3L,UAAU,SAAA,SAAApC,OAAK;AACb8N,aAAOD,MAAM,CAAP;AACN/iB,iBAAW,WAAA;;AACTsX,mBAAQ,sBAACpC,SAAD,OAAA,UAAA,gBAACA,MAAOpZ,WAAR,OAAA,SAAC,cAAehC,UAAhB,OAAA,sBAAyBA,KAAzB;OADA;;IAIZijB,KAAK3hB;GAfP,GAiBC2O,iBACC9O,4BAAA,OAAA;IACEknB,MAAK;IACLlJ,WAAW/f,KACT,6BACA,4BAFa;iBAIL;IACVsJ,IAAG;mBACS;KAEX4U,mBAVH,IAYE,UACJnc,4BAAA,OAAA;IAAKge,WAAU;GAAf,OACAhe,4BAAC6d,QAAD;IACEG,WAAW/f,KAAK,wBAAwB,4BAAzB;IACf+b,SAAS4B;SAET5b,4BAAA,OAAA;IAAKge,WAAU;GAAf,CAJF,CAlCF;AA0CH;SCtFeoK,SAAAA;AACd,aACEpoB,4BAACyjB,UAAD;IAAUzF,WAAU;SAClBhe,4BAAC2nB,iBAAD,IAAA,OACA3nB,4BAAC6mB,oBAAD,IAAA,CAFF;AAKH;SCbewB,mBAAAA;AACd,SAAOC,SAASC;AACjB;AC0CD,IAAKC;CAAL,SAAKA,iBAAAA;AACHA,EAAAA,gBAAAA,WAAAA,IAAA;AACAA,EAAAA,gBAAAA,SAAAA,IAAA;AACAA,EAAAA,gBAAAA,WAAAA,IAAA;AACAA,EAAAA,gBAAAA,YAAAA,IAAA;AACAA,EAAAA,gBAAAA,QAAAA,IAAA;AACAA,EAAAA,gBAAAA,OAAAA,IAAA;AACAA,EAAAA,gBAAAA,OAAAA,IAAA;AACD,GARIA,mBAAAA,iBAAc,CAAA,EAAnB;AAUA,SAAgBC,wBAAAA;AACdC,8BAA2B;AAC3BC,+BAA4B;AAC5BC,kCAA+B;AAC/BC,sCAAmC;AACnCC,wBAAqB;AACtB;AAED,SAASJ,8BAAT;AACE,MAAM3oB,gBAAgBW,iBAAgB;AACtC,MAAMkb,cAAcJ,eAAc;AAClC,MAAMZ,YAAWI,YAAW;AAC5B,MAAM7a,iBAAiBa,kBAAiB;AACxC,MAAM2a,mBAAmBT,oBAAmB;AAC5C,MAAMzB,iBAAiBD,kBAAiB;AACxC,MAAMjJ,oBAAoBF,qBAAoB;AAE9C,MAAMiJ,sBAAsBL,uBAAsB;AAElD,MAAM8P,gBAAYpb,sBAChB,WAAA;AAAA,WACE,SAASob,WAAU9O,OAAnB;AACE,UAAQrb,MAAQqb,MAARrb;AAER2R,wBAAiB;AACjB,cAAQ3R,KAAR;QAEE,KAAK4pB,eAAeQ;AAClB/O,gBAAMgP,eAAN;AACA,cAAIxP,eAAc,GAAI;AACpBH,gCAAmB;AACnB;;AAEFsC,sBAAW;AACXhB,UAAAA,UAAS,CAAD;AACRe,2BAAgB;AAChB;;;KAGR,CACEf,WACAgB,aACAtC,qBACAqC,kBACAlC,gBACAlJ,iBANF,CApBuB;AA8BzBxF,8BAAU,WAAA;AACR,QAAMjK,UAAUf,cAAce;AAE9B,QAAI,CAACA,SAAS;AACZ;;AAGFA,YAAQgQ,iBAAiB,WAAWiY,SAApC;AAEA,WAAO,WAAA;AACLjoB,cAAQmQ,oBAAoB,WAAW8X,SAAvC;;KAED,CAAChpB,eAAeI,gBAAgBya,WAAUmO,SAA1C,CAZM;AAaV;AAED,SAASJ,+BAAT;AACE,MAAMO,sBAAsB/N,uBAAsB;AAClD,MAAMpb,gBAAgBW,iBAAgB;AACtC,MAAMR,UAAUa,WAAU;AAC1B,MAAMZ,iBAAiBa,kBAAiB;AACxC,MAAA,wBAAoCgP,wBAAuB,GAAlDmZ,0BAAT,sBAAA,CAAA;AACA,MAAMC,wBAAwBC,yBAAwB;AACtD,MAAMzB,qBAAqB7E,sBAAqB;AAEhD,MAAMgG,gBAAYpb,sBAChB,WAAA;AAAA,WACE,SAASob,WAAU9O,OAAnB;AACE,UAAQrb,MAAQqb,MAARrb;AAER,cAAQA,KAAR;QACE,KAAK4pB,eAAec;AAClB,cAAI,CAAC1B,oBAAoB;AACvB;;AAEF3N,gBAAMgP,eAAN;AACAE,kCAAwB,IAAD;AACvBD,8BAAmB;AACnB;QACF,KAAKV,eAAee;AAClBtP,gBAAMgP,eAAN;AACAG,gCAAqB;AACrB;QACF,KAAKZ,eAAegB;AAClBvP,gBAAMgP,eAAN;AACA1I,yCAA+BrgB,QAAQY,OAAT;AAC9B;;;KAGR,CACEooB,qBACAE,uBACAD,yBACAjpB,SACA0nB,kBALF,CAxBuB;AAiCzB7c,8BAAU,WAAA;AACR,QAAMjK,UAAUX,eAAeW;AAE/B,QAAI,CAACA,SAAS;AACZ;;AAGFA,YAAQgQ,iBAAiB,WAAWiY,SAApC;AAEA,WAAO,WAAA;AACLjoB,cAAQmQ,oBAAoB,WAAW8X,SAAvC;;KAED,CAAChpB,eAAeI,gBAAgB4oB,SAAhC,CAZM;AAaV;AAED,SAASH,kCAAT;AACE,MAAMxoB,oBAAoBa,qBAAoB;AAC9C,MAAM0a,mBAAmBT,oBAAmB;AAC5C,MAAM/a,iBAAiBa,kBAAiB;AACxC,MAAMooB,wBAAwBC,yBAAwB;AACtD,MAAA,yBAA4BrZ,wBAAuB,GAA5CkU,SAAP,uBAAA,CAAA,GAAeC,YAAf,uBAAA,CAAA;AACA,MAAMY,sBAAsB9B,uBAAsB;AAClD,MAAM2E,qBAAqB7E,sBAAqB;AAChD,MAAM0G,SAASC,UAAS;AAExB,MAAMX,gBAAYpb,sBAChB,WAAA;AAAA;;MAEE,SAASob,WAAU9O,OAAnB;AACE,YAAQrb,MAAQqb,MAARrb;AAER,YAAIgpB,oBAAoB;AACtB,kBAAQhpB,KAAR;YACE,KAAK4pB,eAAemB;AAClB1P,oBAAMgP,eAAN;AACA,kBAAI,CAAC/E,QAAQ;AACX,uBAAOvI,iBAAgB;;AAEzBiO,gCAAkBjO,gBAAD;AACjB;YACF,KAAK6M,eAAec;AAClBrP,oBAAMgP,eAAN;AACA,kBAAI,CAAC/E,QAAQ;AACX,uBAAOvI,iBAAgB;;AAEzBkO,gCAAiB;AACjB;YACF,KAAKrB,eAAee;AAClBtP,oBAAMgP,eAAN;AACA,kBAAI/E,QAAQ;AACVC,0BAAU,KAAD;;AAEXiF,oCAAqB;AACrB;YACF;AACEK,qBAAOxP,KAAD;AACN;;;AAIN,YAAI8K,qBAAqB;AACvB,kBAAQnmB,KAAR;YACE,KAAK4pB,eAAesB;AAClB7P,oBAAMgP,eAAN;AACA,kBAAI,CAAC/E,QAAQ;AACX,uBAAOvI,iBAAgB;;AAEzBiO,gCAAkBjO,gBAAD;AACjB;YACF,KAAK6M,eAAee;AAClBtP,oBAAMgP,eAAN;AACA,kBAAI,CAAC/E,QAAQ;AACX,uBAAOvI,iBAAgB;;AAEzBkO,gCAAiB;AACjB;YACF;AACEJ,qBAAOxP,KAAD;AACN;;;;;KAIV,CACEiK,QACAvI,kBACAwI,WACAiF,uBACAK,QACA1E,qBACA6C,kBAPF,CAzDuB;AAoEzB7c,8BAAU,WAAA;AACR,QAAMjK,UAAUV,kBAAkBU;AAElC,QAAI,CAACA,SAAS;AACZ;;AAGFA,YAAQgQ,iBAAiB,WAAWiY,SAApC;AAEA,WAAO,WAAA;AACLjoB,cAAQmQ,oBAAoB,WAAW8X,SAAvC;;KAED,CAAC3oB,mBAAmBD,gBAAgB+jB,QAAQ6E,SAA5C,CAZM;AAaV;AAED,SAASF,sCAAT;AACE,MAAMlN,mBAAmBT,oBAAmB;AAC5C,MAAM7a,wBAAwBa,yBAAwB;AACtD,MAAMhB,UAAUa,WAAU;AAC1B,MAAM0oB,SAASC,UAAS;AAExB,MAAMX,gBAAYpb,sBAChB,WAAA;AAAA,WACE,SAASob,WAAU9O,OAAnB;AACE,UAAQrb,MAAQqb,MAARrb;AAER,cAAQA,KAAR;QACE,KAAK4pB,eAAesB;AAClB7P,gBAAMgP,eAAN;AACAtN,2BAAgB;AAChB;QACF,KAAK6M,eAAec;AAClBrP,gBAAMgP,eAAN;AACA1pB,kCAAwB8oB,iBAAgB,CAAjB;AACvB;QACF,KAAKG,eAAemB;AAClB1P,gBAAMgP,eAAN;AACA7pB,kCAAwBipB,iBAAgB,CAAjB;AACvB;QACF,KAAKG,eAAee;AAClBtP,gBAAMgP,eAAN;AACA3I,iCAAuBpgB,QAAQY,OAAT;AACtB;QACF;AACE2oB,iBAAOxP,KAAD;AACN;;;KAGR,CAAC/Z,SAASyb,kBAAkB8N,MAA5B,CA3BuB;AA8BzB1e,8BAAU,WAAA;AACR,QAAMjK,UAAUT,sBAAsBS;AAEtC,QAAI,CAACA,SAAS;AACZ;;AAGFA,YAAQgQ,iBAAiB,WAAWiY,SAApC;AAEA,WAAO,WAAA;AACLjoB,cAAQmQ,oBAAoB,WAAW8X,SAAvC;;KAED,CAAC1oB,uBAAuBH,SAAS6oB,SAAjC,CAZM;AAaV;AAED,SAASD,wBAAT;AACE,MAAM5oB,UAAUa,WAAU;AAC1B,MAAMgpB,eAAeC,gBAAe;AACpC,MAAM7Q,qBAAqBO,sBAAqB;AAChD,MAAMD,iBAAiBD,kBAAiB;AACxC,MAAMF,sBAAsBL,uBAAsB;AAElD,MAAMwQ,SAASC,UAAS;AAExB,MAAMX,gBAAYpb,sBAChB,WAAA;AAAA;;MAEE,SAASob,WAAU9O,OAAnB;AACE,YAAQrb,MAAQqb,MAARrb;AAER,YAAM2pB,gBAAgBpU,iBAAiBkU,iBAAgB,CAAjB;AAEtC,gBAAQzpB,KAAR;UACE,KAAK4pB,eAAec;AAClBrP,kBAAMgP,eAAN;AACAtI,kCAAsB4H,aAAD;AACrB;UACF,KAAKC,eAAemB;AAClB1P,kBAAMgP,eAAN;AACArI,kCAAsB2H,aAAD;AACrB;UACF,KAAKC,eAAee;AAClBtP,kBAAMgP,eAAN;AACA,gBAAIxP,eAAc,GAAI;AACpBH,kCAAmB;AACnB;;AAEF0H,wCAA4BuH,aAAD;AAC3B;UACF,KAAKC,eAAesB;AAClB7P,kBAAMgP,eAAN;AACA,gBAAIxP,eAAc,GAAI;AACpBH,kCAAmB;AACnB;;AAEFuH,sCAA0B0H,eAAewB,YAAhB;AACzB;UACF,KAAKvB,eAAenF;AAClBpJ,kBAAMgP,eAAN;AACA9P,+BAAmBc,MAAMpZ,MAAP;AAClB;UACF;AACE4oB,mBAAOxP,KAAD;AACN;;;;KAGR,CACE8P,cACAN,QACAtQ,oBACAM,gBACAH,mBALF,CA1CuB;AAmDzBvO,8BAAU,WAAA;AACR,QAAMjK,UAAUZ,QAAQY;AAExB,QAAI,CAACA,SAAS;AACZ;;AAGFA,YAAQgQ,iBAAiB,WAAWiY,SAApC;AAEA,WAAO,WAAA;AACLjoB,cAAQmQ,oBAAoB,WAAW8X,SAAvC;;KAED,CAAC7oB,SAAS6oB,SAAV,CAZM;AAaV;AAED,SAASM,2BAAT;AACE,MAAMY,0BAA0B7O,2BAA0B;AAC1D,MAAM2L,eAAeP,gBAAe;AACpC,MAAMtmB,UAAUa,WAAU;AAE1B,aAAOwY,0BACL,SAAS6P,wBAAT;AACE,QAAIrC,cAAc;AAChB,aAAOzG,uBAAuBpgB,QAAQY,OAAT;;AAE/B,WAAOmpB,wBAAuB;KAEhC,CAAC/pB,SAAS+pB,yBAAyBlD,YAAnC,CAPgB;AASnB;AAED,SAASiD,kBAAT;AACE,MAAMrO,mBAAmBT,oBAAmB;AAC5C,MAAM+O,0BAA0B7O,2BAA0B;AAC1D,MAAM2L,eAAeP,gBAAe;AAEpC,aAAOjN,0BACL,SAAS2Q,gBAAT;AACE,QAAInD,cAAc;AAChB,aAAOpL,iBAAgB;;AAEzB,WAAOsO,wBAAuB;KAEhC,CAACtO,kBAAkBoL,cAAckD,uBAAjC,CAPgB;AASnB;AAED,SAASL,kBAAkBO,UAA3B;AACE,MAAMC,kBAAkB/B,iBAAgB;AAExC,MAAI,CAAC+B,iBAAiB;AACpB;;AAGF,MAAI,CAACtW,sBAAsBsW,eAAD,GAAmB;AAC3CD,aAAQ;;AAGV5qB,0BAAwB6qB,eAAD;AACxB;AAED,SAASP,oBAAT;AACE,MAAMO,kBAAkB/B,iBAAgB;AAExC,MAAI,CAAC+B,iBAAiB;AACpB;;AAGFhrB,0BAAwBgrB,eAAD;AACxB;AAED,SAASV,YAAT;AACE,MAAM5N,eAAeD,gBAAe;AACpC,MAAMF,mBAAmBT,oBAAmB;AAC5C,MAAMxS,iBAAiBsD,wBAAuB;AAC9C,MAAMsN,sBAAsBL,uBAAsB;AAElD,SAAO,SAASwQ,OAAOxP,OAAhB;AACL,QAAQrb,MAAQqb,MAARrb;AAER,QAAIyrB,YAAYpQ,KAAD,KAAWvR,gBAAgB;AACxC;;AAGF,QAAI9J,IAAI0rB,MAAM,oBAAV,GAAiC;AACnCrQ,YAAMgP,eAAN;AACA3P,0BAAmB;AACnBqC,uBAAgB;AAChBG,mBAAald,GAAD;;;AAGjB;AAED,SAASyrB,YAAYpQ,OAArB;AACE,MAAQsQ,UAA6BtQ,MAA7BsQ,SAASC,UAAoBvQ,MAApBuQ,SAASC,SAAWxQ,MAAXwQ;AAE1B,SAAOF,WAAWC,WAAWC;AAC9B;SCzdeC,aACd3hB,aACA7D,OACAtB,YAAAA;AAEA,MAAI,CAACsB,OAAO;AACV;;AAGF,MAAItB,eAAevC,WAAW8d,QAAQ;AACpC;;AAGF,MAAMlZ,UAAUN,aAAaT,KAAD;AAE5B,MAAIylB,eAAepd,IAAItH,OAAnB,GAA6B;AAC/B;;AAGFQ,kBAAgBvB,KAAD,EAAQvG,QAAQ,SAACiI,WAAD;AAC7B,QAAMgkB,WAAW7hB,YAAYnC,WAAWhD,UAAZ;AAC5BinB,iBAAaD,QAAD;GAFd;AAKAD,iBAAevL,IAAInZ,OAAnB;AACD;AAEM,IAAM0kB,iBAA8B,oBAAIjhB,IAAJ;AAE3C,SAASmhB,aAAaC,KAAtB;AACE,MAAMC,QAAQ,IAAIC,MAAJ;AACdD,QAAMtM,MAAMqM;AACb;SC3BeG,aAAAA;AACd,MAAM/qB,UAAUa,WAAU;AAC1B,MAAM6C,aAAawH,oBAAmB;AACtC,MAAMrC,cAAcoD,qBAAoB;AAExCpB,8BAAU,WAAA;AACR,QAAInH,eAAevC,WAAW8d,QAAQ;AACpC;;AAGF,QAAMtO,UAAU3Q,QAAQY;AAExB+P,eAAO,OAAP,SAAAA,QAASC,iBAAiB,WAAWqX,OAArC;AAEA,WAAO,WAAA;AACLtX,iBAAO,OAAP,SAAAA,QAASI,oBAAoB,WAAWkX,OAAxC;;AAGF,aAASA,QAAQlO,OAAjB;AACE,UAAMlF,SAASZ,iBAAiB8F,MAAMpZ,MAAP;AAE/B,UAAI,CAACkU,QAAQ;AACX;;AAGF,UAAA,oBAAgBT,iBAAiBS,MAAD,GAAzB7P,QAAP,kBAAA,CAAA;AAEA,UAAI,CAACA,OAAO;AACV;;AAGF,UAAIkB,mBAAmBlB,KAAD,GAAS;AAC7BwlB,qBAAa3hB,aAAa7D,OAAOtB,UAArB;;;KAGf,CAAC1D,SAAS0D,YAAYmF,WAAtB,CA9BM;AA+BV;;;SC9BuBmiB,WAAAA,MAAAA;MAAaprB,WAAAA,KAAAA;AACnC,aACEE,4BAACsO,uBAAD,UACEtO,4BAACmrB,mBAAD,MAAoBrrB,QAApB,CADF;AAIH;AAMD,SAASqrB,kBAAT,OAAA;;MAA6BrrB,WAAAA,MAAAA;AAC3B,MAAM0J,QAAQkC,eAAc;AAC5B,MAAM0f,mBAAmB5E,gBAAe;AACxC,MAAMzmB,gBAAgBW,iBAAgB;AACtC,MAAA,uBAA0BmL,oBAAmB,GAArC7C,SAAR,qBAAQA,QAAQW,QAAhB,qBAAgBA;AAEhB8e,wBAAqB;AACrBwC,aAAU;AAEV,MAAM3M,QAAQ;IACZtV;IACAW;;AAKF,aACE3J,4BAAA,SAAA;IACEge,WAAW/f,KAAKN,WAAW0pB,aAAa,aAAzB,QAAA,CAAA,GAAA,MACZ1pB,WAAW0tB,YADC,IACcD,kBADd,MAEZztB,WAAW2tB,SAFC,IAEW9hB,UAAUlI,MAAMiD,MAF3B,MAGZ5G,WAAW4tB,SAHC,IAGW/hB,UAAUlI,MAAMkqB,MAH3B,MAAA;IAKf1J,KAAK/hB;IACLue;KAECxe,QATH;AAYH;;;AC7CD,SAAS2rB,YAAY3N,OAArB;AACE,aACE9d,4BAACH,2BAAD,UACEG,4BAACgK,sBAAD,OAAA,OAAA,CAAA,GAA0B8T,KAAAA,OACxB9d,4BAACkrB,YAAD,UACElrB,4BAACooB,QAAD,IAAA,OACApoB,4BAACqiB,MAAD,IAAA,OACAriB,4BAAC8kB,SAAD,IAAA,CAHF,CADF,CADF;AAUH;AAGD,IAAA,uBAAe9kB,mBAAWyrB,aAAa,SAACpsB,MAAMG,MAAP;;AACrC,MAAMksB,oBAAgB,qBAAGrsB,KAAK8H,iBAAR,OAAA,qBAAwB,CAAA;AAC9C,MAAMwkB,oBAAgB,qBAAGnsB,KAAK2H,iBAAR,OAAA,qBAAwB,CAAA;AAC9C,SACE9H,KAAKyJ,iBAAiBtJ,KAAKsJ,gBAC3BzJ,KAAK8J,sBAAsB3J,KAAK2J,qBAChC9J,KAAK+J,sBAAsB5J,KAAK4J,qBAChC/J,KAAKwJ,oBAAoBrJ,KAAKqJ,mBAC9BxJ,KAAKiK,sBAAsB9J,KAAK8J,qBAChCjK,KAAKuJ,oBAAoBpJ,KAAKoJ,mBAC9BvJ,KAAKuE,eAAepE,KAAKoE,cACzBvE,KAAKmK,UAAUhK,KAAKgK,SACpBnK,KAAKmJ,wBAAwBhJ,KAAKgJ,uBAClCnJ,KAAK4J,mBAAmBzJ,KAAKyJ,kBAC7B5J,KAAK2J,WAAWxJ,KAAKwJ,UACrB3J,KAAKsK,UAAUnK,KAAKmK,SACpBtK,KAAKqJ,mBAAmBlJ,KAAKkJ,kBAC7BrJ,KAAKoJ,2BAA2BjJ,KAAKiJ,0BACrCijB,iBAAiBvoB,WAAWwoB,iBAAiBxoB;AAEhD,CApBc;ICzBMyoB,gBAAAA,SAAAA,kBAAAA;;AAInB,WAAAA,eAAY9N,OAAZ;;AACE,YAAA,iBAAA,KAAA,MAAMA,KAAN,KAAA;AACA,UAAKhR,QAAQ;MAAE+e,UAAU;;;;iBAGpBC,2BAAP,SAAA,2BAAA;AACE,WAAO;MAAED,UAAU;;;;SAGrBE,oBAAA,SAAA,kBAAkBC,OAAcC,WAAhC;AAEEC,YAAQF,MAAM,wCAAwCA,OAAOC,SAA7D;;SAGFE,SAAA,SAAA,SAAA;AACE,QAAI,KAAKrf,MAAM+e,UAAU;AACvB,aAAO;;AAGT,WAAO,KAAK/N,MAAMhe;;;EAvBqBE,sBAAAA;SCK3BosB,cAAAA,MAAAA;MACdnmB,UAAAA,KAAAA,0BACA8Y,MAAAA,OAAAA,cAAAA,SAAO,KAAA,kCACPnb,YAAAA,aAAAA,oBAAAA,SAAavC,WAAW2C,QAAAA,sCACxBua,UAAAA,WAAAA,kBAAAA,SAAW,QAAA,eACXxV,cAAAA,KAAAA,aACA6hB,WAAAA,KAAAA;AASA,MAAI,CAAC3kB,WAAW,CAAC2kB,YAAY,CAAC7hB,aAAa;AACzC,WAAO;;AAGT,aACE/I,4BAAC8e,eAAD;IACE7Y;IACA8Y;IACAnb;IACA2a;IACAxV,aAAa6hB,WAAW,WAAA;AAAA,aAAMA;QAAW7hB;GAL3C;AAQH;SCXuB0iB,cAAY3N,OAAAA;AAClC,MAAMnT,mBAAmBD,uBAAuB;IAC9CG,cAAciT,MAAMjT;GADyB;AAI/C,aACE7K,4BAAC4rB,eAAD,UACE5rB,4BAACqK,qBAAqB7J,UAAtB;IAA+B3B,OAAO8L;SACpC3K,4BAACqsB,kBAAD,OAAA,OAAA,CAAA,GAAsBvO,KAAAA,CAAtB,CADF,CADF;AAMH;;",
  "names": ["ClassNames", "asSelectors", "classNames", "map", "c", "join", "clsx", "args", "classes", "reduce", "arg", "push", "Array", "isArray", "Object", "entries", "forEach", "key", "value", "filter", "Boolean", "focusElement", "element", "requestAnimationFrame", "focus", "focusPrevElementSibling", "prev", "previousElementSibling", "focusNextElementSibling", "next", "nextElementSibling", "focusFirstElementChild", "first", "firstElementChild", "ElementRefContextProvider", "children", "PickerMainRef", "React", "AnchoredEmojiRef", "BodyRef", "SearchInputRef", "SkinTonePickerRef", "CategoryNavigationRef", "VariationPickerRef", "ElementRefContext", "Provider", "useElementRef", "usePickerMainRef", "useAnchoredEmojiRef", "useSetAnchoredEmojiRef", "target", "current", "useBodyRef", "useSearchInputRef", "useSkinTonePickerRef", "useCategoryNavigationRef", "useVariationPickerRef", "SuggestionMode", "EmojiStyle", "Theme", "SkinTones", "Categories", "SkinTonePickerLocation", "categoriesOrdered", "SUGGESTED", "CUSTOM", "SMILEYS_PEOPLE", "ANIMALS_NATURE", "FOOD_DRINK", "TRAVEL_PLACES", "ACTIVITIES", "OBJECTS", "SYMBOLS", "FLAGS", "SuggestedRecent", "name", "category", "configByCategory", "baseCategoriesConfig", "modifiers", "categoryFromCategoryConfig", "categoryNameFromCategoryConfig", "mergeCategoriesConfig", "userCategoriesConfig", "extra", "suggestionMode", "RECENT", "base", "length", "getBaseConfigByCategory", "modifier", "assign", "CDN_URL_APPLE", "CDN_URL_FACEBOOK", "CDN_URL_TWITTER", "CDN_URL_GOOGLE", "cdnUrl", "emojiStyle", "TWITTER", "GOOGLE", "FACEBOOK", "APPLE", "skinToneVariations", "NEUTRAL", "LIGHT", "MEDIUM_LIGHT", "MEDIUM", "MEDIUM_DARK", "DARK", "skinTonesNamed", "acc", "skinTonesMapped", "mapped", "skinTone", "EmojiProperties", "alphaNumericEmojiIndex", "setTimeout", "allEmojis", "searchIndex", "emoji", "indexEmoji", "joinedNameString", "emojiNames", "flat", "toLowerCase", "replace", "split", "char", "emojiUnified", "addedIn", "parseFloat", "added_in", "emojiName", "unifiedWithoutSkinTone", "unified", "splat", "splice", "emojiHasVariations", "emojiVariationUnified", "emojisByCategory", "emojis", "emojiUrlByUnified", "emojiVariations", "variations", "find", "variation", "includes", "emojiByUnified", "allEmojisByUnified", "withoutSkinTone", "values", "setCustomEmojis", "customEmojis", "emojiData", "customToRegularEmoji", "names", "id", "imgUrl", "Emoji", "activeVariationFromUnified", "suspectedSkinTone", "KNOWN_FAILING_EMOJIS", "DEFAULT_SEARCH_PLACEHOLDER", "SEARCH_RESULTS_NO_RESULTS_FOUND", "SEARCH_RESULTS_SUFFIX", "SEARCH_RESULTS_ONE_RESULT_FOUND", "SEARCH_RESULTS_MULTIPLE_RESULTS_FOUND", "mergeConfig", "userConfig", "basePickerConfig", "previewConfig", "config", "categories", "suggestedEmojisMode", "skinTonePickerLocation", "searchDisabled", "PREVIEW", "autoFocusSearch", "defaultSkinTone", "emojiVersion", "getEmojiUrl", "height", "lazyLoadEmojis", "basePreviewConfig", "searchPlaceHolder", "searchPlaceholder", "SEARCH", "skinTonesDisabled", "FREQUENT", "theme", "unicodeToHide", "Set", "width", "defaultEmoji", "defaultCaption", "showPreview", "ConfigContext", "PickerConfigProvider", "mergedConfig", "useSetConfig", "setMergedConfig", "usePickerConfig", "MutableConfigContext", "createContext", "useMutableConfig", "mutableConfig", "useContext", "useDefineMutableConfig", "MutableConfigRef", "useRef", "onEmojiClick", "emptyFunc", "useEffect", "useSearchPlaceHolderConfig", "p", "useDefaultSkinToneConfig", "useSkinTonesDisabledConfig", "useEmojiStyleConfig", "useAutoFocusSearchConfig", "useCategoriesConfig", "useCustomEmojisConfig", "useOnEmojiClickConfig", "usePreviewConfig", "useThemeConfig", "useSuggestedEmojisModeConfig", "useLazyLoadEmojisConfig", "usePickerSizeConfig", "getDimension", "useEmojiVersionConfig", "useSearchDisabledConfig", "useSkinTonePickerLocationConfig", "useUnicodeToHide", "useGetEmojiUrlConfig", "dimensionConfig", "useSearchResultsConfig", "searchResultsCount", "hasResults", "isPlural", "toString", "useDebouncedState", "initialValue", "delay", "useState", "state", "setState", "timer", "debouncedSetState", "Promise", "resolve", "clearTimeout", "window", "useIsUnicodeHidden", "has", "useDisallowedEmojis", "DisallowedEmojisRef", "emojiVersionConfig", "useMemo", "Number", "isNaN", "disallowedEmojis", "addedInNewerVersion", "useIsEmojiDisallowed", "isUnicodeHidden", "isEmojiDisallowed", "supportedLevel", "useMarkInitialLoad", "dispatch", "PickerContextProvider", "filterRef", "disallowClickRef", "disallowMouseRef", "disallowedEmojisRef", "suggestedUpdateState", "Date", "now", "searchTerm", "skinToneFanOpenState", "activeSkinTone", "activeCategoryState", "emojisThatFailedToLoadState", "emojiVariationPickerState", "isPastInitialLoad", "setIsPastInitialLoad", "PickerContext", "undefined", "useFilterRef", "useDisallowClickRef", "useDisallowMouseRef", "useSearchTermState", "useActiveSkinToneState", "useEmojisThatFailedToLoadState", "useIsPastInitialLoad", "useEmojiVariationPickerState", "useSkinToneFanOpenState", "useUpdateSuggested", "suggestedUpdated", "setsuggestedUpdate", "updateSuggested", "useDisallowMouseMove", "DisallowMouseRef", "disallowMouseMove", "useAllowMouseMove", "allowMouseMove", "useIsMouseDisallowed", "isMouseDisallowed", "useOnMouseMove", "bodyRef", "addEventListener", "onMouseMove", "passive", "removeEventListener", "elementCountInRow", "parent", "parentWidth", "getBoundingClientRect", "elementWidth", "Math", "floor", "elementIndexInRow", "elementLeft", "left", "parentLeft", "rowNumber", "elementHeight", "elementTop", "top", "parentTop", "round", "hasNextRow", "parentHeight", "getRowElements", "elements", "row", "elementsInRow", "lastRow", "firstElementIndex", "lastElementIndex", "slice", "getNextRowElements", "allElements", "currentRow", "nextRow", "getElementInRow", "indexInRow", "rowElements", "getElementInNextRow", "index", "nextRowElements", "getElementInPrevRow", "prevRowElements", "firstVisibleElementInContainer", "parentBottom", "bottom", "visibleElements", "elementBottom", "hasNextElementSibling", "EmojiButtonSelector", "VisibleEmojiSelector", "visible", "hidden", "buttonFromTarget", "emojiElement", "closest", "emojiFromElement", "originalUnified", "originalUnifiedFromEmojiElement", "unifiedFromEmojiElement", "isEmojiElement", "matches", "parentElement", "clientHeight", "emojiTrueOffsetTop", "button", "closestCategory", "labelHeight", "categoryLabelHeight", "elementOffsetTop", "categoryWithoutLabel", "querySelector", "categoryContent", "isEmojiBehindLabel", "emojiDistanceFromScrollTop", "queryScrollBody", "root", "scrollBody", "closestScrollBody", "scrollTop", "emojiTruOffsetLeft", "elementOffsetLeft", "offsetTop", "offsetLeft", "elementDataSetKey", "elementDataSet", "dataset", "isVisibleEmoji", "classList", "contains", "isHidden", "allVisibleEmojis", "from", "querySelectorAll", "lastVisibleEmoji", "last", "prevVisibleEmoji", "nextVisibleEmoji", "firstVisibleEmoji", "nextCategory", "prevCategory", "closestCategoryContent", "parseNativeEmoji", "hex", "String", "fromCodePoint", "parseInt", "SUGGESTED_LS_KEY", "getSuggested", "mode", "localStorage", "recent", "JSON", "parse", "getItem", "sort", "a", "b", "count", "setSuggested", "existing", "u", "nextList", "concat", "i", "original", "min", "setItem", "stringify", "isCustomCategory", "isCustomEmoji", "useCloseAllOpenToggles", "variationPicker", "setVariationPicker", "skinToneFanOpen", "setSkinToneFanOpen", "closeAllOpenToggles", "useCallback", "useHasOpenToggles", "hasOpenToggles", "useSetVariationPicker", "setAnchoredEmojiRef", "setEmojiVariationPicker", "useMouseDownHandlers", "mouseDownTimerRef", "activeEmojiStyle", "onClick", "event", "emojiFromEvent", "skinToneToUse", "emojiClickOutput", "onMouseDown", "onMouseUp", "getImageUrl", "imageUrl", "isCustom", "useOnScroll", "onScroll", "scrollTo", "$eprBody", "scrollBy", "by", "useScrollTo", "scrollEmojiAboveLabel", "useFocusSearchInput", "useFocusSkinTonePicker", "useFocusCategoryNavigation", "useSetFilterRef", "setFilter", "setter", "useClearSearch", "applySearch", "useApplySearch", "focusSearchInput", "clearSearch", "useAppendSearch", "appendSearch", "str", "getNormalizedSearchTerm", "useFilter", "setFilterRef", "statusSearchResults", "getStatusSearchResults", "onChange", "inputValue", "nextValue", "longestMatch", "findLongestMatch", "filterEmojiObjectByKeyword", "setSearchTerm", "then", "keyword", "filtered", "hasMatch", "some", "useIsEmojiFiltered", "isEmojiFilteredBySearchTerm", "dict", "longestMatchingKey", "keys", "trim", "filterState", "useIsEmojiHidden", "emojisThatFailedToLoad", "isEmojiFiltered", "failedToLoad", "filteredOut", "Button", "props", "type", "className", "ClickableEmojiButton", "hiddenOnSearch", "showVariations", "hasVariations", "EmojiImg", "style", "lazyLoad", "onError", "src", "alt", "external", "loading", "NativeEmoji", "ViewOnlyEmoji", "size", "setEmojisThatFailedToLoad", "fontSize", "emojiToRender", "NATIVE", "add", "ClickableEmoji", "EmojiCategory", "categoryConfig", "categoryName", "label", "Suggested", "suggestedEmojisModeConfig", "suggested", "suggestedItem", "EmojiList", "renderdCategoriesCountRef", "emojiList", "RenderCategory", "isEmojiHidden", "emojisToPush", "hiddenCounter", "isDisallowed", "focusFirstVisibleEmoji", "focusAndClickFirstVisibleEmoji", "firstEmoji", "click", "focusLastVisibleEmoji", "focusNextVisibleEmoji", "focusPrevVisibleEmoji", "focusVisibleEmojiOneRowUp", "exitUp", "visibleEmojiOneRowUp", "focusVisibleEmojiOneRowDown", "visibleEmojiOneRowDown", "countInRow", "prevVisibleCategory", "nextVisibleCategory", "itemInNextRow", "Direction", "EmojiVariationPicker", "useVariationPickerTop", "getTop", "getMenuDirection", "getPointerStyle", "usePointerStyle", "pointerStyle", "ref", "Down", "clientWidth", "direction", "Up", "emojiOffsetTop", "buttonHeight", "Body", "useEmojiPreviewEvents", "allow", "setPreviewEmoji", "onEscape", "onMouseOver", "onEnter", "onLeave", "e", "relatedTarget", "useIsSkinToneInSearch", "skinTonePickerLocationConfig", "useIsSkinToneInPreview", "FlexDirection", "Flex", "ROW", "Space", "flex", "Absolute", "position", "Relative", "ITEM_SIZE", "SkinTonePickerMenu", "right", "SkinTonePicker", "SkinTonePickerDirection", "VERTICAL", "HORIZONTAL", "isDisabled", "isOpen", "setIsOpen", "setActiveSkinTone", "fullWidth", "expandedSize", "vertical", "open", "flexBasis", "skinToneVariation", "active", "transform", "tabIndex", "Preview", "isSkinToneInPreview", "PreviewBody", "previewEmoji", "variationPickerEmoji", "show", "PreviewContent", "defaultText", "categoryNameFromDom", "$category", "getAttribute", "useActiveCategoryScrollDetection", "setActiveCategory", "visibleCategories", "Map", "observer", "IntersectionObserver", "entry", "set", "intersectionRatio", "ratios", "lastCategory", "ratio", "threshold", "el", "observe", "useIsSearchMode", "useScrollCategoryIntoView", "scrollCategoryIntoView", "useShouldHideCustomEmojis", "customCategoryConfig", "CategoryNavigation", "activeCategory", "isSearchMode", "categoriesConfig", "hideCustomCategory", "role", "isActiveCategory", "SCOPE", "emojiPicker", "EMOJI_BUTTON", "CATEGORY", "CssSearch", "q", "genQuery", "SearchContainer", "isSkinToneInSearch", "Search", "inc", "setInc", "placeholder", "autoFocus", "input", "onFocus", "Header", "getActiveElement", "document", "activeElement", "KeyboardEvents", "useKeyboardNavigation", "usePickerMainKeyboardEvents", "useSearchInputKeyboardEvents", "useSkinTonePickerKeyboardEvents", "useCategoryNavigationKeyboardEvents", "useBodyKeyboardEvents", "onKeyDown", "Escape", "preventDefault", "focusSkinTonePicker", "setSkinToneFanOpenState", "goDownFromSearchInput", "useGoDownFromSearchInput", "ArrowRight", "ArrowDown", "Enter", "onType", "useOnType", "ArrowLeft", "focusNextSkinTone", "focusPrevSkinTone", "ArrowUp", "goUpFromBody", "useGoUpFromBody", "focusCategoryNavigation", "goUpFromEmoji", "exitLeft", "currentSkinTone", "hasModifier", "match", "metaKey", "ctrlKey", "altKey", "preloadEmoji", "preloadedEmojs", "emojiUrl", "preloadImage", "url", "image", "Image", "useOnFocus", "PickerMain", "PickerRootElement", "searchModeActive", "searchActive", "darkTheme", "autoTheme", "AUTO", "EmojiPicker", "prevCustomEmojis", "nextCustomEmojis", "ErrorBoundary", "hasError", "getDerivedStateFromError", "componentDidCatch", "error", "errorInfo", "console", "render", "ExportedEmoji", "EmojiPickerReact"]
}
